{"version":3,"sources":["node_modules/r9x_js/src/dom.factory.js","node_modules/r9x_js/src/stateFactory.js","node_modules/r9x_js/src/component.factory.js","node_modules/r9x_js/src/router.factory.js","node_modules/r9x_js/src/r9x.factory.js","node_modules/r9x_js/src/observer.factory.js","node_modules/r9x_js/index.js","src/components/appHeader/appHeader.styles.js","src/components/appHeader/appHeader.template.js","src/components/appMenu/appMenu.styles.js","src/components/appMenu/appMenu.template.js","src/components/appMenu/appMenu.component.js","src/components/appLogo/appLogo.styles.js","src/components/appLogo/appLogo.template.js","src/components/appLogo/appLogo.component.js","src/components/appHeader/appHeader.component.js","src/components/appMain.component.js","src/components/appHome/appHome.template.js","src/components/appHome/appHome.styles.js","store.js","src/components/appTitle/appTitle.template.js","src/components/appTitle/appTitle.styles.js","src/components/appTitle/appTitle.component.js","src/components/appView/appView.template.js","src/components/appView/appView.styles.js","src/components/appCode/appCode.styles.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/process/browser.js","node_modules/util/util.js","node_modules/markdown/lib/markdown.js","node_modules/markdown/lib/index.js","src/components/appCode/appCode.template.js","node_modules/highlight.js/lib/core.js","node_modules/highlight.js/lib/languages/javascript.js","node_modules/highlight.js/lib/languages/xml.js","node_modules/highlight.js/lib/languages/css.js","src/components/appCode/appCode.component.js","src/components/appView/appView.component.js","src/components/appHome/appHome.component.js","src/components/appNotFound.component.js","src/components/appStore/appStore.template.js","src/components/appStore/appStore.styles.js","src/components/appStore/appStore.component.js","src/components/appTutorial/appTutorial.template.js","src/components/appTutorial/appTutorial.styles.js","src/components/appTutorial/appTutorial.component.js","main.js"],"names":["domFactory","_context","bindEventListeners","handlers","Object","keys","forEach","key","bindStyles","tagName","styles","styleExists","document","querySelector","styleElement","createElement","setAttribute","textContent","head","insertAdjacentElement","setContext","context","queryAll","selector","Array","from","querySelectorAll","query","on","eventName","elements","handler","element","addEventListener","delay","debounceTimer","e","clearTimeout","setTimeout","_debounce","stateFactory","_state","_listeners","_cloneState","payload","JSON","parse","stringify","merge","assign","watch","listener","push","set","newState","data","_notify","get","logger","console","log","componentFactory","_createAppName","_createProps","schema","stateManager","props","object","text","dataset","replace","_getProps","_execHooks","hookName","hookList","hasOwnProperty","render","factory","contexts","component","create","hooks","_updateView","config","template","events","state","methods","dataProps","dataModel","_domManger","innerHTML","_createStyles","children","length","_hasChildren","childKey","_renderChildren","target","parent","appName","name","split","map","part","index","charAt","toUpperCase","slice","join","parentComponentElement","_createState","elm","_createMethods","directives","_createDirectives","_createEvents","_createHooks","_createChildren","Math","random","toString","routerFactory","_config","_routerElement","_componentsManager","_initFirstRoute","hash","window","location","_redirectTo","_initRouteByHash","route","defaultRoute","otherRoutes","routes","selectedRoute","find","hashExp","test","_getRouteByHash","nodeElement","outerHTML","_injectElementNode","_createElement","init","_hasRoutes","hashChanged","_getHash","onhashchange","setRoutes","routeSettings","r9x","_main","_routes","componentsManager","routesManager","use","main","body","observerFactory","storeState","_observerList","subscribe","observer","Error","unsubscribe","filter","observerItem","update","mutator","notify","menuList","item","link","label","appMenu","appLogo","appHeader","appMain","afterOnInit","sections","store","introduction","title","tagline","articles","paragraphs","code","tutorial","type","appTitle","tpl","section","sectionTitle","sectionTagline","sectionArticles","article","articleTitle","articleParagraphs","paragraph","paragraphText","paragraphCode","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","call","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","arguments","i","prototype","apply","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getOwnPropertyDescriptors","obj","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","str","String","x","Number","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","formatValue","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","styleType","style","arrayToHash","val","idx","value","recurseTimes","isFunction","constructor","ret","primitive","formatPrimitive","visibleKeys","isError","getOwnPropertyNames","indexOf","formatError","isRegExp","RegExp","isDate","Date","base","output","braces","isArray","toUTCString","formatArray","formatProperty","pop","reduceToSingleString","simple","isNumber","l","match","desc","line","substr","reduce","prev","cur","numLinesEst","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","o","pad","n","debuglog","pid","isBuffer","require","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","add","kCustomPromisifiedSymbol","Symbol","undefined","callbackifyOnRejected","reason","cb","newReason","callbackify","original","TypeError","callbackified","maybeCb","self","then","rej","setPrototypeOf","getPrototypeOf","defineProperties","promisify","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","custom","getType","htmlScape","appCode","initHighlight","configure","languages","registerLanguage","javascript","xml","css","block","highlightBlock","specialChars","appView","htmlEncode","result","appHome","appNotFound","appStore","appTutorial","firstRoute","app"],"mappings":"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CA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEA,EAAA,CACA,OACA,QACA,OACA,YACA,MACA,YAGA,EAAA,CACA,OACA,WACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,QACA,UACA,OACA,UACA,eACA,aACA,aACA,YACA,cACA,cACA,eACA,QACA,aACA,oBACA,eAGA,EAAA,CACA,YACA,gBACA,aACA,iBACA,cACA,YACA,YAGA,EAAA,CACA,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGA,EAAA,CACA,YACA,OACA,QACA,UACA,SACA,WACA,eACA,SACA,UAGA,EAAA,GAAA,OACA,EACA,EACA,EACA,GAYA,SAAA,EAAA,GACA,OAAA,EACA,iBAAA,EAAA,EAEA,EAAA,OAHA,KAUA,SAAA,EAAA,GACA,OAAA,EAAA,MAAA,EAAA,KAOA,SAAA,KAAA,GAEA,OADA,EAAA,IAAA,GAAA,EAAA,IAAA,KAAA,IAWA,SAAA,EAAA,GACA,IAAA,EAAA,EACA,EACA,KADA,EAEA,MAEA,EAAA,CACA,MAAA,sBACA,IAAA,6BAEA,EAAA,CACA,SAAA,EACA,QAAA,EAAA,KAAA,KACA,QAAA,EAAA,KAAA,KACA,SAAA,EAAA,KAAA,MAEA,EAAA,CACA,UAAA,SACA,SAAA,CACA,CAAA,MAAA,qBACA,CAAA,MAAA,sBACA,CAAA,MAAA,EAAA,YAAA,OAEA,UAAA,GAEA,EAAA,CACA,UAAA,QACA,MAAA,SAAA,IAAA,MACA,SAAA,EACA,SAAA,IAEA,EAAA,CACA,MAAA,QAAA,IAAA,GACA,OAAA,CACA,IAAA,IAAA,WAAA,EACA,SAAA,CACA,EAAA,iBACA,GAEA,YAAA,QAGA,EAAA,CACA,MAAA,OAAA,IAAA,GACA,OAAA,CACA,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","file":"main.397c0553.js","sourceRoot":"..","sourcesContent":["const domFactory = () => {\n    let _context = null\n\n    const _debounce = (handler, delay) => {\n        let debounceTimer\n\n        return (e) => {\n            clearTimeout(debounceTimer)\n            debounceTimer = setTimeout(() => handler(e), delay)\n        }\n    }\n\n    const setContext = (context) => _context = context\n\n    const on = (eventName, elements, handler) => {\n        elements.forEach( element => {\n            element.addEventListener(eventName, _debounce(handler, 200))\n        })\n    }\n\n    const query = (selector) => _context.querySelector(selector)\n\n    const queryAll = (selector) => Array.from(_context.querySelectorAll(selector))\n\n    const bindEventListeners = (handlers) => { \n        const keys = Object.keys(handlers)\n        keys.forEach( key => handlers[key]())\n    }\n\n    const bindStyles = (tagName, styles) => { \n        if(!styles || !tagName) return \n        const styleExists = document.querySelector(`style#${tagName}`) ? true : false\n\n        if(styleExists) return\n\n        const styleElement = document.createElement('style')\n        styleElement.setAttribute('id', tagName)\n        styleElement.textContent = styles\n        document.head.insertAdjacentElement('beforeend', styleElement)\n    }\n\n    return {\n        bindEventListeners,\n        bindStyles,\n        setContext,\n        queryAll,\n        query,\n        on\n    }\n}\n\nexport {domFactory}","const stateFactory = () => {\n    const _state = {}\n    const _listeners = []\n\n    const _cloneState = (payload) => {\n        if(!payload) return\n        return JSON.parse(JSON.stringify(payload))\n    }\n\n    const _notify = (newState) => {\n        const data = _cloneState(newState)\n        _listeners.forEach(listener => {\n            listener(data)\n        })\n    }    \n\n    const watch = (listener) => {\n        _listeners.push(listener)\n    }\n\n    const merge = (payload) => {\n        return Object.assign(_state, _cloneState(payload))\n    }\n\n    const set = (payload) => {\n        const newState = merge(payload)\n        _notify(newState)\n    }\n\n    const get = () => {\n        return _cloneState(_state)\n    }\n\n    const logger = () => console.log(_state)\n\n\n    return {\n        watch,\n        merge,\n        set,\n        get,\n        logger\n    }\n}\n\nexport { stateFactory }","import { domFactory } from './dom.factory.js'\nimport { stateFactory } from './stateFactory.js'\n\nconst componentFactory = () => {\n\n    const _createAppName = (factory) => {\n        return factory().tagName.split('-').map((part, index) => {\n            if (index > 0) {\n                const firstLetter = part.charAt(0).toUpperCase()\n                const partName = `${firstLetter}${part.slice(1)}`\n                return partName\n            }\n            return part\n        }).join('')        \n        // return text.replace(/([A-Z]+|[A-Z]?[a-z]+)(?=[A-Z]|\\b)/g, '-$&').slice(1).toLowerCase()\n    }\n\n    const _createState = (schema) => {\n        const stateManager = stateFactory()\n        stateManager.merge(schema.state)\n        const { set, get, watch, logger } = stateManager\n        return { set, get, watch, logger }\n    }\n\n    const _getProps = (element) => {\n        let object = {}\n        let text = ''\n\n        if (element.dataset && element.dataset.props) {\n            object = JSON.parse(element.dataset.props.replace(/\\'/g, '\"')) || {}\n        }\n\n        if (element.dataset && element.dataset.text) {\n            text = element.dataset.text || ''\n        }\n\n        return {\n            object, text\n        }\n\n    }\n\n    const _createProps = (schema, element) => {\n        const stateManager = stateFactory()\n        const props = _getProps(element)\n        stateManager.merge(props)\n        const { set, get, watch } = stateManager\n        return { set, get, watch }\n    }\n\n    const _createEvents = (schema, methods, directives, target) => {\n        if (!schema || !schema.events || typeof schema.events !== 'function') return {}\n        const _domManger = domFactory()\n        _domManger.setContext(target)\n\n        return schema.events({\n            on: _domManger.on,\n            query: _domManger.query,\n            queryAll: _domManger.queryAll,\n            methods,\n            directives\n        })\n    }\n\n    const _createChildren = (schema) => {\n        if (schema && schema.children && typeof schema.children === 'function') return schema.children()\n        return {}\n    }\n\n    const _createHooks = (schema, state, props, methods) => {\n        if (!schema || !schema.hooks || typeof schema.hooks !== 'function') return null\n        return schema.hooks({\n            state,\n            props,\n            methods,\n        })\n    }\n\n    const _createMethods = (schema, state, props, elm) => {\n        if (!schema || !schema.methods || typeof schema.methods !== 'function') return {}\n        return schema.methods({ state, props, elm })\n    }\n\n    const _createDirectives = (schema, state, props, elm) => {\n        if (!schema || !schema.directives || typeof schema.directives !== 'function') return {}\n        const _domManger = domFactory()\n        _domManger.setContext(elm)\n        return schema.directives({\n            state,\n            props,\n            elm,\n            query: _domManger.query,\n            queryAll: _domManger.queryAll,\n            on: _domManger.on,\n\n        })\n    }\n\n    const _createStyles = (styles) => {\n        if (!styles || typeof styles !== 'function') return ''\n        return styles()\n    }\n\n\n    const _hasChildren = (component) => {\n        if (!component.hasOwnProperty('children')) return false\n        if (!Object.keys(component.children).length) return false\n        return true\n    }\n\n    const _execHooks = (hookName, hookList) => {\n        if (!hookList || !hookName) return\n        if (!hookList.hasOwnProperty(hookName)) return\n        if (typeof hookList[hookName] !== 'function') return\n        hookList[hookName]()\n    }\n\n    const render = (factory, contexts, newState) => {\n        const tagName = factory().tagName\n\n        contexts.forEach(context => {\n            const elements = context.querySelectorAll(tagName)\n            elements.forEach(element => {\n                const component = create(factory, element, element)\n                _execHooks('beforeOnInit', component.hooks)\n                component.render()\n                _execHooks('afterOnInit', component.hooks)\n            })\n        })\n    }\n\n    const _renderChildren = (component) => {\n        if (!component || !component.children) return\n        const childrenKeys = Object.keys(component.children)\n        childrenKeys.forEach(childKey => {\n            render(component.children[childKey], [component.element])\n        })\n    }\n\n    const _updateView = (config) => {\n\n        const { tagName, element, template, events, props, state, hooks, methods, styles } = config\n        const dataProps = props.get ? props.get() : props\n        const dataModel = state.get ? state.get() : state\n        const _domManger = domFactory()\n\n        element.dataset.props = JSON.stringify(dataProps).replace(/\\\"/g, \"'\")\n\n        _execHooks('beforeOnRender', hooks)\n\n        element.innerHTML = template({\n            props: dataProps,\n            state: dataModel,\n            methods\n        })\n\n        _domManger.setContext(element)\n        _domManger.bindEventListeners(events)\n        _domManger.bindStyles(tagName, _createStyles(styles))\n\n        _execHooks('afterOnRender', hooks)\n\n        if (_hasChildren(config)) _renderChildren(config)\n    }\n\n    const create = (factory, target, parent) => {\n        const schema = factory()\n        const appName = factory.name\n        const tagName = _createAppName(factory)\n        const element = target\n        const parentComponentElement = parent\n        const state = _createState(schema)\n        const props = _createProps(schema, element)\n        const methods = _createMethods(schema, state, props, element)\n        const directives = _createDirectives(schema, state, props, element)\n        const events = _createEvents(schema, methods, directives, element)\n        const hooks = _createHooks(schema, state, props, methods)\n        const children = _createChildren(schema)\n        const render = () => _updateView(component)\n\n        const component = { ...schema, appName, state, props, tagName, element, children, methods, events, hooks, parentComponentElement, render }\n\n        component.element.setAttribute('uId', Math.random().toString().slice(2))\n\n        state.watch((newState) => {\n            Object.assign(component.state, newState)\n            _updateView(component)\n        })\n\n        props.watch((newState) => {\n            Object.assign(component.props, newState)\n            _updateView(component)\n        })\n\n        return component\n    }\n\n    return {\n        create,\n        render,\n    }\n}\n\n\nexport { componentFactory }","import { componentFactory } from './component.factory.js'\n\nconst routerFactory = () => {\n\n    let _config = {}\n    let _routerElement = null\n    const _componentsManager = componentFactory()\n\n    const _setRouterElement = () => {\n        _routerElement = document.querySelector('router-view')\n    }\n\n    const _redirectTo = (hash) => window.location.hash = hash\n\n    const _createTagName = (text) => {\n        return text.replace(/([A-Z]+|[A-Z]?[a-z]+)(?=[A-Z]|\\b)/g, '-$&').slice(1).toLowerCase()\n    }    \n\n    const _createElement = (tagName) => document.createElement(tagName)\n\n    const _injectElementNode = (nodeElement) => _routerElement.innerHTML = nodeElement.outerHTML\n\n    const _initFirstRoute = () => {\n        const hash = _config['firstRoute'].hash\n        _redirectTo(hash)\n        _initRouteByHash(hash)\n    }\n\n    const _getRouteByHash = (hash) => {\n        const {defaultRoute, otherRoutes: routes} = _config\n        const selectedRoute = routes.find( route => {\n            if(route.hashExp.test(hash)) return route\n        })\n        return selectedRoute ? selectedRoute : defaultRoute\n    }\n\n    const _initRouteByHash = (hash) => {\n        const route = _getRouteByHash(hash)\n        const tagName = route.component().tagName\n        const componentElement = _createElement(tagName)\n        _injectElementNode(componentElement)\n        _componentsManager.render(route.component, [_routerElement])\n    }\n\n    const _listenOnHashChange = () => {\n        window.onhashchange = () => {\n            const hash = window.location.hash\n            _initRouteByHash(hash)\n        }\n    }\n\n    const _hasRoutes = () => { \n        if(!_config) return false\n        return Object.keys(_config).length ? true : false\n    }\n\n    const _getHash = () => window.location.hash\n\n    const setRoutes = (routeSettings) => _config = routeSettings\n\n    const init = () => {\n        if(!_hasRoutes()) return\n        const hashChanged = _getHash()\n        _setRouterElement()\n        hashChanged ? _initRouteByHash(hashChanged) : _initFirstRoute()\n        _listenOnHashChange()\n    }\n\n    return {\n        init,\n        setRoutes\n    }\n}\n\nexport { routerFactory }","import { componentFactory } from './component.factory.js'\nimport { routerFactory } from './router.factory.js'\n\nconst r9x = () => {\n\n    let _main = null\n    let _routes = null\n\n    const componentsManager = componentFactory()\n    const routesManager = routerFactory()\n\n    const use = (config) => {\n        const { main, routes } = config\n        _main = main\n        _routes = routes\n    }\n\n    const init = () => {\n        componentsManager.render(_main, [document.body])\n        routesManager.setRoutes(_routes)\n        routesManager.init()\n    }\n\n\n    return {\n        use,\n        init\n    }\n}\n\nexport { r9x }","const observerFactory = (storeState) => {\n    let _observerList = []\n\n    const _emitError = (msg) => {\n        console.warn(msg)\n    }\n\n    const subscribe = (observer) => {\n        if (typeof observer !== 'function') throw new Error('The provided observer is not a function and must be.')\n        // const observerExists = _observerList.some( listener => listener.name === observer.name)\n        // !observerExists ? _observerList.push(observer) : _emitError('Another observer with the same name has already been registered.')\n        _observerList.push(observer)\n        return observer\n    }\n\n    const unsubscribe = (observer) => {\n        _observerList = _observerList.filter( observerItem => observerItem !== observer)\n    }\n\n    const notify = (data) => {\n        _observerList.forEach( observer => observer(data))\n    }\n\n    const update = (mutator) => {\n        mutator(storeState)\n        notify(storeState)\n    }\n\n    const logger = () => console.log(_observerList)\n\n    const get = () => storeState\n\n    return { subscribe, unsubscribe, update, get, logger }\n}\n\nexport { observerFactory }","import { r9x } from './src/r9x.factory'\nimport { observerFactory as storeFactory } from './src/observer.factory'\n\nexport { r9x, storeFactory }","export default () => /*css*/ `\n    app-header .header-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n        border-bottom:1px #ebebeb solid;\n        background:#15171b;\n    }\n\n    app-header .container {\n        display:block;\n        width:100%;\n        max-width:1180px;\n        margin:0 auto;\n    }\n\n    app-header .container::after {\n        display:block;\n        width:100%;\n        clear:both;\n    }\n\n    app-header .grid {\n        display:block;\n        float:left;\n    }\n\n    app-header .grid.logo {\n        float:left;\n        width:150px;      \n    }\n\n    app-header .grid.menu {\n        float:right;\n        width: calc(100% - 150px)\n    }\n`","export default ({props, state}) => /*html*/ `\n    <div class=\"header-wrapper\">\n        <div class=\"container\">\n            <div class=\"grid logo\">\n                <app-logo></app-logo>\n            </div>\n            <div class=\"grid menu\">\n                <app-menu></app-menu>\n            </div>            \n        </div>\n    </div>\n`","export default () => /*css*/`\n    app-menu .menu-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n        height:45px;\n    }\n\n    app-menu .list,\n    app-menu .item,\n    app-menu .link {\n        display:block;\n    }\n\n    app-menu .list,\n    app-menu .link {\n        float:left;\n    }\n\n    app-menu .item {\n        display:inline-block\n    }\n\n    app-menu .list {\n        width:100%;\n        text-align:right;\n    }\n\n    app-menu .link {\n        padding-left:15px;\n        text-decoration:none;\n        color:#848d9f;\n        font-size: .875em;\n        transition: .2s ease-in;\n        outline:0\n    }\n\n    app-menu .link:hover {\n        color:#9c29dc\n    }\n`","export default ({props, state}) => /*html*/`\n    <div class=\"menu-wrapper\">\n        <ul class=\"list\">\n        ${state.menuList.map( item => /*html*/ `\n            <li class=\"item\">\n                <a href=\"${item.link}\" class=\"link\">${item.label}</a>\n            </li>\n        `).join('')}\n        </ul>\n    </div>\n`","import styles from './appMenu.styles'\nimport template from './appMenu.template'\n\nconst appMenu = () => {\n    \n    const tagName = 'app-menu'\n\n    const state = {\n        menuList: [\n            {label: 'Introdução', link:'#/'},\n            {label: 'Store', link:'#/store'},\n            {label: 'Tutorial', link:'#/tutorial'},\n            {label: 'Github', link:'#/github'},\n        ]\n    }\n\n    return {\n        tagName,\n        state,\n        styles,\n        template\n    }\n}\n\nexport { appMenu }","export default () => /*css*/ `\n    .logo-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        height:45px;\n        line-height:45px;\n        text-align:center;\n        color: #9c29dc;\n        font-weight:bold\n    }\n\n    .logo-wrapper i {\n        font-size: .9em\n    }\n`","export default ({props, state}) => /*html*/ `\n    <div class=\"logo-wrapper\">\n        <i class=\"las la-sync\"></i> <span class=\"title\">R9X</span>\n    </div>\n`","import styles from './appLogo.styles'\nimport template from './appLogo.template'\n\nconst appLogo = () => {\n\n    const tagName = 'app-logo'\n\n    return {\n        tagName,\n        styles,\n        template\n    }\n}\n\nexport {\n    appLogo\n}","import styles from './appHeader.styles'\nimport template from './appHeader.template'\n\nimport { appMenu } from '../appMenu/appMenu.component'\nimport { appLogo } from '../appLogo/appLogo.component'\n\nconst appHeader = () => {\n\n    const tagName = 'app-header'\n\n    const children = () => ({\n        appMenu,\n        appLogo\n    })\n\n    return {\n        tagName,\n        styles,\n        template,\n        children\n    }\n\n}\n\nexport { appHeader }","\nimport {appHeader} from './appHeader/appHeader.component'\n\nconst appMain = () => {\n\n    const tagName = 'app-main'\n\n    const children = () => ({\n        appHeader\n    })\n\n    const template = ({state, props}) => {\n        return /*html*/`\n            <div class=\"app-main-wrapper\">\n                <app-header></app-header>\n                <router-view></router-view>\n            </div>\n        `\n    }\n\n    const styles = () => {\n        return /*css*/`\n\n           app-main {\n            display: block;\n            float: left;\n            width: 100%;               \n           }\n        `\n    }\n\n    const hooks = ({state}) => ({\n        afterOnInit () {\n\n        }\n    })\n\n    return {\n        tagName,\n        template,\n        styles,\n        hooks,\n        children\n    }\n}\n\nexport { appMain }","export default ({props, state, methods}) => {\n\n    const { sections } = state\n\n    // console.log('--->', JSON.stringify(sections))\n    return /*html*/`\n    <div class=\"home-wrapper\">\n        <div class=\"container\">\n            <app-view data-props=\"{'section':'introduction'}\"></app-view>\n        </div>\n\n    </div>\n`\n}\n\n/*<app-title data-props=\"{'title':'Apresentação', 'type':'mini'}\"></app-title>\n<app-code data-text=\"${methods.htmlEncode(state.content)}\"></app-code>*/","export default () => /*css*/ `\n    app-home .home-wrapper {\n        display:block;\n        float:left;\n        width:100%\n    }\n\n    app-home .container {\n        display:block;\n        width:100%;\n        max-width:1180px;\n        margin:0 auto;\n        padding:15px;\n    }\n\n    app-home .container::after {\n        content:'';\n        display:block;\n        width:100%;\n        clear:both;\n    }\n\n    app-home .tagline {\n        display: block;\n        float: left;\n        width: 100%;\n        padding: 15px;\n        margin: 15px 0;\n        border-radius: 4px;\n        font-size: .875em;\n        color: #667185;\n        background: #f9f9f9;\n        text-transform: uppercase;\n        font-weight: 900;\n    }\n\n    app-home .paragraph {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px 0;\n        line-height:1.5em;\n        font-size: 1.2em;\n        color:#667185;\n    }\n`","import { storeFactory } from 'r9x_js'\n\nconst store = storeFactory({\n    introduction: {\n        sections: [\n            {\n                title: 'Apresentação',\n                tagline: 'R9X Interfaces reativas com factory functions.',\n                articles: [\n                    {\n                        title: 'Para que serve r9x?',\n                        paragraphs: [\n                            {\n                                text: 'Frameworks reduzem muito pouco o tempo de desenvolvimento de projetos para produção. Por isso, R9X foca na organização do código e oferece formas simples de reagir a mudanças no estado da aplicação. Acreditamos que esse é o ponto chave para acelerar o desenvolvimento de qualquer aplicação.',\n                            }\n                        ],\n                    },\n                    {\n                        title: 'Objetivo',\n                        paragraphs: [\n                            {\n                                text: 'O objetivo desse artigo é apresentar de forma clara os recursos fornecidos por r9x para desenvolvimento de interfaces reativas. Por isso, é de suma importância que você leia essa documentação para entender os recursos existentes na biblioteca.'\n                            }\n                        ],\n                    },\n                ]\n            },\n            {\n                title: 'Instalando R9X',\n                tagline: 'r9x está nos repositórios do npm é fácil instalar.',\n                articles: [\n                    {\n                        title: 'Versões',\n                        paragraphs: [\n                            {\n                                text: 'Com o comando abaixo você instala a versão mais recente da biblioteca.',\n                                code: `npm install --save r9x_js`\n                            }\n                        ],\n                    }\n                ]\n            },\n            {\n                title: 'Arquitetura',\n                tagline: 'Estruturar um projeto é super simples.',\n                articles: [\n                    {\n                        title: 'Montando a base de um projeto',\n                        paragraphs: [\n                            {\n                                text: 'O código abaixo define a base de um projeto com rotas de navegação.',\n                                code: `\nimport { r9x } from 'r9x_js'\n\nimport { appMain as main } from './src/components/appMain.component'\nimport {appHome} from './src/components/appHome/appHome.component'\nimport { appNotFound } from './src/components/appNotFound.component'\n\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#\\/$/, component: appHome },\n    ]\n}\n\nconst app = r9x()\n\napp.use({\n    main,\n    routes,\n})\n\napp.init()`\n                            },\n                            {\n                                text: 'Observe o trecho abaixo:',\n                                code: `\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#\\/$/, component: appHome },\n    ]\n}                            \n                            `\n                            },\n                            {\n                                text: 'Temos aqui a definição das rotas, onde firstRoute define a rota que será carregado assim que a aplicação inicializar, seguido por defaultRoute que define o componente a ser carregado se uma rota não registrada for acessada e logo depois temos otherRoutes que fornece os demais componentes para cada roda de navegação registrada.'\n                            },\n                            {\n                                text: 'firstRoute e defaultRoute possuem a propriedade hash que difere da propriedade hashExp de otherRoutes. Isso acontece porque no modelo de roteador padrão, as rotas iniciais precisam ser strings simples enquanto em otherRoutes o roteador utiliza expressões regulares para identificar o hash acessado no navegador para então carregar o componente definido para a rota.'\n                            },\n                            {\n                                text: 'R9X utiliza o padrão factory para quase tudo, inclusive a função de inicialização r9x() é uma factory que retorna um objeto contendo o método use(), utilizado para definir o componente principal e as rotas e o método init para inicializar a aplicação. Veja abaixo:',\n                                code: `\n                            \napp.use({\n    main,\n    routes,\n})\n\napp.init()                            \n                            `\n                            }\n                        ],\n                    }\n                ]\n            },\n            {\n                title: 'Fabricando componentes',\n                tagline: 'Componentes são apenas factory functions',\n                articles: [\n                    {\n                        title: 'Compontes como funções fábricas',\n                        paragraphs: [\n                            {\n                                text: 'para R9X componentes são apenas funções fábricas que retornam recursos predefinidos. Veja abaixo a criação de um componente.',\n                                code: `\nconst appHelloWord = () => {\n\n    const state = {\n        text: 'hello World!'\n    }\n\n    const template = ({props, state}) => {\n        return /*html*/ \\`<h1> \\${state.text} </h1>\\`\n    }\n\n    const styles = () => /*css*/ \\`\n        h1 { color: blue }\n    \\`\n\n    return { state, template, styles }\n}                            \n                            `\n                            },\n                        ]\n                    },\n                    {\n                        title: 'State',\n                        paragraphs: [\n                            {\n                                text: 'Observe o trecho:',\n                                code: `\n    const state = {\n        text: 'hello World!'\n    }                            \n                            `\n                            },\n                            {\n                                text: 'Esse é o state que contém os dados locais do componente e qualquer alteração na propriedade text do state fará com que o template seja atualizado.'\n                            }\n                        ]\n                    },\n                    {\n                        title: 'Template',\n                        paragraphs: [\n                            {\n                                text: 'R9X utiliza template literals para marcar o html. Dessa forma reduz complexidade e elimina a necessidade de criar diretivas acionadas diretamente no template para proporcionar interação e realizar transformações ou validações nos dados do compoenente. Segue abaixo o trecho de código que representa o template do componente.',\n                                code: `\n    const template = ({props, state}) => {\n        return /*html*/ \\`<h1> \\${state.text} </h1>\\`\n    }                            \n                            `\n                            },\n                            {\n                                text: 'Observe que nesse caso, o template tem acesso a props e state. Props, acessa as propriedades reativas passadas pela tag do componente, enquanto state acessa as propriedades do state.',\n                                code: `\n<app-hello-world data-props=\"{'text':'hello world'}\"></app-hello-world>                            \n                            `\n                            },\n                            {\n                                text: 'Dessa forma o template pode obter o texto a ser exibido através das propriedades reativas ao invés do state.'\n                            },\n                            {\n                                code: `\n    const template = ({props, state}) => {\n        return /*html*/ \\`<h1> \\${props.object.text} </h1>\\`\n    }                            \n                            `\n                            },\n                            {\n                                text: 'A propriedade methods do componente também está acessível para o template. Por tanto, é possível realizar a transformação e validação de dados acessando uma função previamente definida caso seja necessário.',\n                                code: `\n    const template = ({methods}) => {\n        return /*html*/ \\`<h1> \\${methods.getText()} </h1>\\`\n    }                               \n                            `\n                            }\n                        ]\n                    },\n                    {\n                        title: 'Estilos CSS',\n                        paragraphs: [\n                            {\n                                text: 'Os estilos css são retornado pela função styles e assim que o componente é rederizado, são aplicados para estilizar as tags do template.',\n                                code: `\n    const styles = () => /*css*/ \\`\n        h1 { color: blue }\n    \\`                            \n                            `\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                title: 'Methods, Events e Hooks',\n                tagline: 'Definindo comportamentos com eventos, hooks e methods',\n                articles: [\n                    {\n                        title: 'Methods',\n                        paragraphs: [\n                            {\n                                text: 'Os métodos de um componente são apenas funções simples que executam alguma operação. Os métodos também podem acessar as propriedades reativas e o state do componente.',\n                                code: `\n\nconst appHelloWorld = ()  => {\n\n    //código omitido\n\n    const methods = ({props, state}) => ({\n\n        logger (...params) { \n            console.log(...params)\n        },\n\n        logPropText () {\n            const { text } = props.get()\n            console.log('Prop Text: ', text)\n        },\n\n        logStateText () {\n            const { text } = state.get()\n            console.log('State Text': text)\n        }\n\n    })\n\n    return {\n        //código omitido\n        methods\n    }\n}\n\n                            `\n                            },\n                            {\n                                text: 'Observe que para obter a propriedade text tanto de props, quanto de state, foi utilizado uma função get disponibilizada pelo reator da biblioteca. O reator é o gerenciador de mutações que observa props e state para atualizar o template do componente se uma alteração nos dados ocorrer.'\n                            },\n                            {\n                                text: 'o reator ainda disponibiliza a propriedade set para realizar alterações nas propriedades reativas e no state do componente. Veja abaixo:',\n                                code: `\nconst appHelloWorld = () => {\n\n    //código omitido\n\n    const methods = ({props, state}) => ({\n\n        changeStateText = (value) => {\n            state.set({text:value})\n        },\n\n        changePropText = (value) => {\n            prop.set({text:value})\n        },\n\n    })\n\n    return {\n        //código omitido\n        methods\n    }    \n}                        \n                            `\n                            }\n                        ]\n                    },\n                    {\n                        title: 'Events',\n                        paragraphs: [\n                            {\n                                text: 'É através dos events que o componente gerencia a interação do usuário da aplicação com o template do componente. Veja o exemplo:',\n                                code: `\nconst appHelloWorld = () => {\n\n    const state = {\n        text: 'Hello World'\n    }\n\n    const template = ({props, state}) => {\n        return /*html*/ \\`<h1> \\${state.text} </h1>\\`\n    }    \n    \n    const styles = () => /*css*/ \\`\n        h1 { color: blue }\n    \\` \n\n    //Bind de eventos\n\n    const events = ({on, query, methods}) => ({\n\n        onClickTitle () {\n            const titleElm = query('h1')\n            on('click', [titleElm], methods.logElement)\n        }\n    })\n\n    const methods = ({props, state}) => ({\n\n        logElement({target}) { console.log(target) }\n        \n    })\n\n\n}                    \n                    `\n                            },\n                            {\n                                text: 'Events disponibiliza para os handlers 3 recursos, query, queryAll e on. Estas, são funções auxiliares onde query e queryAll retornam elementos html encontrados no contexto do componente. Já on, é utilizado para realizar o bind de eventos. A função on recebe 3 parametros.',\n                            },\n                            {\n                                text: '1º - o nome do evento, 2º um array de elementos, 3º o ouvinte, função a ser executado quando o evento ocorrer.',\n                                code: `\n//código omitido\n\nconst events = ({on, query, methods}) => ({\n\n    onClickTitle () {\n        const titleElm = query('h1')\n        on('click', [titleElm], methods.logElement)\n    }\n})\n\n//código omitido    \n                            `\n                            },\n                            {\n                                text: 'Observe acima que events também acessa o método logElement disponibilizado através da propriedade methods do componente.'\n                            }\n                        ]\n                    },\n                    {\n                        title: 'Hooks',\n                        paragraphs: [\n                            {\n                                text: 'Atualmente existem 4 rooks que podem ser utilizados para executar operações durante as fazes do ciclo de vida do componente. Esses hooks são beforeOnInit, afterOnInit, beforeOnRender e afterOnRender.',\n                                code: `\nconst appHelloWorld = () => {\n    \n    //código omitido\n\n    const hooks = () => ({\n        beforeOnInit () {\n            console.log('executa uma vez antes do componente ser inicializado')\n        },\n\n        afterOnInit () {\n            console.log('executa uma vez depois do componente ser inicializado')\n        },\n\n        beforeOnRender () {\n            console.log('executado sempre antes da renderização do componente ocorrer')\n        },\n\n        afterOnRender () {\n            console.log('executado sempre depois da renderização do componente ocorrer')\n        },\n    })\n\n    return { hooks }\n}                            \n                            `\n                            },\n                            {\n                                text: 'Os hooks também acessam os métodos do componente.',\n                                code: `\nconst appHelloWorld = () => {\n    \n    //código omitido\n\n    const hooks = ({methods}) => ({\n        beforeOnInit () {\n            methods.logMessage('executa uma vez antes do componente ser inicializado')\n        },\n\n        afterOnInit () {\n            methods.logMessage('executa uma vez depois do componente ser inicializado')\n        },\n\n        beforeOnRender () {\n            methods.logMessage('executado sempre antes da renderização do componente ocorrer')\n        },\n\n        afterOnRender () {\n            methods.logMessage('executado sempre depois da renderização do componente ocorrer')\n        },\n    })\n\n    const methods = ({props, state}) => ({\n        \n        logMessage (text) {\n            console.log(text)\n        }\n\n    })\n\n    return { hooks, methods }\n}                             \n                            `\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                title: \"Conclusão!\",\n                tagline: 'R9X é simples de aprender e aplicar.',\n                articles: [\n                    {\n                        title: 'Menos tempo estudando mais tempo produzindo.',\n                        paragraphs: [\n                            {\n                                text: 'Bem, chegamos ao fim dessa introdução e acredite... Você já viu quase tudo que há para saber sobre R9X.'\n                            },\n                            {\n                                text: 'Se acha que isso ainda não é o suficiente para desenvolver interfaces reativas, te convido a seguir o tutorial disponível aqui nesse site. Ele vai te convencer!'\n                            },\n                            {\n                                text: 'Antes de ir para o tutorial, seria interessante ler a sessão store. O conteúdo disposto nela vai te ajudar a entendender como os componentes podem compartilhar dados e reagir de acordo com as mutações desses dados.',\n                            },\n                        ]\n                    }\n                ]\n            },\n\n        ]        \n    },\n    store: {\n        sections: [\n            {\n                title: 'Store',\n                tagline: 'Observable Store, simples e eficiente.',\n                articles: [\n                    {\n                        title: 'Compartilhando dados observaveis',\n                        paragraphs: [\n                            {\n                                text: 'Uma store de dados é apenas um objeto observável.',\n                            },\n                            {\n                                text: 'Para criar uma nova store, basta importar storeFactory e fornecer para a função fábrica o objeto de dados a ser observado.',\n                                code:`\nimport { storeFactory } from 'r9x_js'\n\nconst store = storeFactory({\n    title:'New Store'\n})\n\nexport { store }\n                                `\n                            },\n                        ]\n                    },\n                    {\n                        title:'Reagindo a mutações',\n                        paragraphs: [\n                            {\n                                text: 'Para reagir as mutações nos dados de uma store, um componente precisa se inscrever para ouvir suas mutações.',\n                                code: `\nimport { store } from 'another/place/store'\n\nconst appTitle = () => {\n\n    const state = store.get()\n\n    const template = ({props, state}) => {\n        return /*html*/ \\`<h1> \\${state.title} </h1>\\`\n    }\n\n    const styles = () => /*css*/ \\`\n        h1 { color: blue }\n    \\` \n\n    const hooks = () => ({\n\n        beforeOnInit () {\n            store.subscribe((payload) => {\n                state.set(payload)\n            })\n        }\n\n    })\n\n    return {\n        state,\n        template,\n        styles,\n        hooks\n    }\n}                                \n                                `\n                            },\n                            {\n                                text: 'No trecho de código acima, temos várias coisas acontecendo. Mas, note que uma store foi importada dentro do arquivo do componente.',\n                                code:`\nimport { store } from 'another/place/store'\n\nconst appTitle () => { /*codigo omitido*/ }\n                                `\n                            },\n                            {\n                                text:'Em seguida, o componente obtem os dados da store e armazena no state local.',\n                                code:`\nimport { store } from 'another/place/store'\n\nconst appTitle () => { \n    \n    const state = store.get()\n\n    /*codigo omitido*/ \n\n}                                \n                                `\n                            },\n                            {\n                                text:'Observe que nas próximas linhas, o componente se inscreve para ouvir as mutações da store e reagir a elas aproveitando-se do hook beforeOnInit. Assim, sempre que a store for alterada, os state local e o template do componente serão atualizados.',\n                                code:`\nimport { store } from 'another/place/store'\n\nconst appTitle () => { \n    \n    const state = store.get()\n\n    /*codigo omitido*/ \n\n    const hooks = () => ({\n\n        beforeOnInit () {\n            store.subscribe((payload) => state.set(payload))\n        }\n\n    })\n    \n    /*codigo omitido*/\n\n}                                  \n                                `\n                            },\n                            {\n                                text:'Olhando com mais profundidade, você notará que o método subscribe da store recebe um callback. Esse callback será executado sempre que a store mudar. O mais interessante é que sempre que o callback é executado, o mesmo recebe os novos dados da store através do parametro payload. Dessa forma, através do metodo state.set() é possível atualizar os dados do state local do componente fazendo com que o mesmo atualize o seu template para exibir as informações atualizadas. Veja abaixo:',\n                                code:`\n/*Código omitido*/\nstore.subscribe((payload) => state.set(payload))\n/*Código omitido*/\n                                `\n                            }\n                        ]\n                    }\n                ]                \n            },            \n            {\n                title: 'Conclusão',\n                tagline: 'Simplicidade é a palavra chave!',\n                articles: [\n                    {\n                        title: 'Justificando o padrão observable store',\n                        paragraphs: [\n                            {\n                                text: 'R9X adota o padrão de dados observáveis para simplificar o processo de desenvolvimento de aplicações reais. Dessa forma, um componente pode se inscrever para ouvir mudanças somente nos dados que importam.',\n                            },\n                            {\n                                text: 'Bem isso é tudo sobre observable store. Mas, seria interessante ir para a próxima sessão \"tutorial\" para por em prática todos os recursos detalhados até esse ponto.'\n                            }\n                        ]\n                    }\n                ]                \n            }            \n        ]\n    },\n    tutorial: {\n        sections: [\n            {\n                title: 'Tutorial',\n                tagline: 'Aplicando r9x para construtir um gerenciador de locação de filmes.',\n                articles: [\n                    {\n                        title: 'Introdução',\n                        paragraphs: [\n                            {\n                                text: 'Esse tutorial aborda a construção de um gerenciador de locação de filmes de forma direta, afim de otimizar o tempo necessário para construir o app e aprender r9x.',\n                            },\n                            {\n                                text: 'A partir da próxima sessão você pode acompanhar a construção passo-a-passo do app e poderá entender os conceitos e recursos necessários para desenvolver aplicações com r9x.',\n                            },\n                        ],\n                    },\n                    {\n                        title: 'Mão na massa!',\n                        paragraphs: [\n                            {\n                                text: 'O primeiro passo para desenvolver a aplicação proposta é definir a base do projeto. Utilizaremos \"degit\" para clonar o repositório r9x_tutorial, pois essa é a forma mais rápida para criar a estrutura do projeto.',\n                            },\n                            {\n                                text: 'A ferramenta \"degit\" é um módulo diponível nos repositórios do npm. Seu trabalho é clonar repositórios git sem rastreamento. Isso significa que você pode clonar rapidamente r9x_tutorial e em seguida definir suas próprias configurações de versionamento.',\n                            },\n                            {\n                                text: 'Para instalar \"degit\" no linux utilize o comando abaixo ou pesquise por degit no site do npm para mais instruções.',\n                                code:'sudo npm install degit -g'\n                            },\n                            {\n                                text:'Para clonar o projeto, crie uma nova pasta, um nome sugestivo é \"movie-manager\" abra a pasta no terminal e digite:',\n                                code:'degit github:devfreelex/r9x_tutorial'\n                            },\n                            {\n                                text:'Pronto, a estrutura do projeto já foi criada ou clonada.'\n                            },\n                            {\n                                text: 'Observe que temos a seguinte estrutura de arquivos e diretórios:'\n                            },\n                            {\n                                code: `\nsrc\n|_ assets\n|_ components\n|_ main.js\nindex.html\npackage.json\n                                `\n                            }, \n                            {\n                                text:'Na raiz do projeto está o arquivo index.html reponsável por carregar o arquivo main.js que contém as configurações básicas para inicialização do projeto.'\n                            },\n                            {\n                                text:'Ainda na raiz do projeto, está o arquivo package.json, esse arquivo contém as confgurações de depências do projeto e comandos específicos para rodá-lo em ambiente de desenvolvimento e produção.'\n                            },\n                            {\n                                text:'Dentro da pasta src fica a pastas assets, que contém arquivos de estilização. Esses arquivos já estão prontos para uso. Ainda em src está a pasta components, que deve conter os componentes da aplicaçao.'\n                            },\n                            {\n                                text:'Para finalizar essa sessão, execute no terminal o comano abaixo:',\n                                code:`npm install`\n                            },\n                            {\n                                text:'Esse comando instalará todas as dependências do projeto. Após a instalação ser concluída inicialize a aplicação em modo de desenolvimento executando o comando:',\n                                code:'npm run dev'\n                            },\n                            {\n                                text:'Pronto, para ver o resultado acesse em um navegador, de preferência no chrome a url: http://localhost:3000. Se tudo deu certo a aplicação deve mostrar na tela um \"Hello World!\".'\n                            },\n                            {\n                                text:'A partir da próxima sessão, criaremos o bootstrap e os componentes do gerenciador de locação de filmes.'\n                            }\n                        ],\n                    },\n                    {\n                        title:'Bootstrap da aplicaçao',\n                        paragraphs:[\n                            {\n                                text:'Dentro do arquivo main.js defina o código abaixo:',\n                                code:`\nimport { r9x } from 'r9x_js'\n\nconst routes = {}\n\nconst app = r9x()\n\napp.use({\n    main,\n    routes,\n})\n\napp.init()                                \n`\n                            },\n                            {\n                                text:'No trecho de código acima, importamos r9x como uma dependência e criamos o objeto de rotas (\"routes\").'\n                            },\n                            { \n                                text: 'Na sequencia, executamos r9x que retorna para a variável app, dois métodos auxiliares para adicionar recursos ao projeto e inicializar a aplicaçao. Esses metodos são \"use\" e \"init\" respectivamente.'\n                            },\n                            {\n                                text:'Agora observe que passamos os objetos routes e main para o método use, mas, perceba que main não existe ainda.'\n                            },\n                            {\n                                text: 'Para r9x o componente principal da aplicação tem um nome padrão, esse nome é main. Então, vamos importar esse componente agora, caso contrário ao atualizar a página da aplicação obteremos um erro.'\n                            },\n                            {\n                                text:'Para fins didáticos, o componente main.js assim como o componente appNotFound, foi préviamente criado para este tutorial. Portanto, vamos importálos agora.',\n                                code:`\nimport { appMain as main } from './components/appMain.component'\nimport { appNotFound } from './components/appNotFound.component'\n\n`\n                            },\n                            {\n                                text:'Aproveitando o momento, vamos também definir as configurações para as rotas de navegação.',\n                                code:`\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#/$/, component: appHome },\n        { hashExp: /^\\#/user/\\d+$/, component: appUserDetail },\n    ]\n}                                \n                                `\n                            },\n                            {\n                                text: 'O objeto de rotas é composto por três chaves, \"firstRoute\", \"defaultRoute\" e \"otherRoute\".'\n                            },\n                            {\n                                text: 'A chave firstRoute define a rota inicial da aplicação  e o componente a ser carregado para essa rota através do objeto interno e suas propriedades \"hash\" e \"component\".',\n                                code: `\nfirstRoute: { hash: '#/', component: appHome },                                \n                                `\n                            },\n                            {\n                                text: 'A chave defaultRoute segue a mesma lógica, mas, define uma rota a ser carregada apenas quando uma rota não existente for acessada na aplicação. Nesse caso, o componente a ser carregado na rota padrão e o appNotFound.',\n                                code:`\ndefaultRoute: { hash: '#/404', component: appNotFound },                                \n                                `\n                            },\n                            {\n                                text: 'A chave otherRoutes também segue a mesma lógica, porém, carrega componentes para rotas existentes sempre que ocorre uma mudança na url do navegador. Observe ainda que o objeto interno dessa propriedade não possui a propriedade hash e sim a propriedade hashExp que é uma expressão regular ao contrário da propriedade hash que armazena uma string.',\n                                code:`\notherRoutes: [\n    { hashExp: /^\\#/$/, component: appHome },\n    { hashExp: /^\\#/user/\\d+$/, component: appUserDetail },\n]                                \n                                `\n                            },\n                            {\n                                text: ' A substituição de hash para hashExp é necessária para verificar se a rota acessada é válida e uma das melhores formas para fazer isso é usando expressõo regular. Então sim, as rotas em r9x são baseadas em expressões regulares.'\n                            },\n                            {\n                                text: 'O código completo fica assim:',\n                                code:`\nimport { r9x } from 'r9x_js'\nimport { appMain as main } from './components/appMain.component'\nimport { appHome } from './components/appHome/appHome.component'\nimport { appNotFound } from './components/appNotFound.component'\n\nimport './assets/styles/reset.css'\nimport './assets/styles/main.css'\n\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#/$/, component: appHome },\n    ]\n}\n\nconst app = r9x()\n\napp.use({\n    main,\n    routes,\n})\n\napp.init()                                \n                                `\n                            },\n                            {\n                                text:'Ainda obteremos um erro ao executar a aplicação, pois, o component appHome definido para a rota inicial ainda não existe. Então o criaremos na próxima sessão.'\n                            }\n                        ]\n                    },\n                    {\n                        title:'Components',\n                        paragraphs:[\n                            {\n                                text:'Componentes para r9x são apenas factory functions que retornam um objeto contendo as propriedades de um componente.',\n                            },\n                            {\n                                text:'Vamos criar o componente appHome. Por isso, dentro da pasta components crie a pasta appHome e dentro dela os arquivos:',\n                                code: `\nappHome.component.js\nappHome.template.js\nappHome.styles.js                                \n                                `\n                            },\n                            {\n                                text: 'Os sufixos .component, .template, .styles são bem descritivos. Está claro a responsabilidade de cada arquivo do componente.'\n                            },\n                            {\n                                text:'Dentro do arquivo appHome.component.js insira o código abaixo:',\n                                code:`\n/*appHome.component.js*/\n                                \nimport template from './appHome.template.js'\nimport styles from './appHome.styles.js'\n\nconst appHome = () => {\n    \n    return  {\n        template,\n        styles\n    }\n\n}\n\nexport { appHome }\n                                `\n                            },\n                            {\n                                text:'Observe que o componente tem duas dependências, o template e seus estilos. Precisamos definir a função de template e de estilos. Criaremos agora o template.',\n                                code: `\n//appHome.template.js                                \n\n    export default ({props, state}) => {\n        return /*html*/ \\`<h1> appHome </h1>\\`\n    }\n                                `\n                            },\n                            {\n                                text:'Observe que a função que define o template recebe um parâmetro, do qual extrai propriedades (props) e dados (state) que mais tarde podem ser utilizados pelo template.'\n                            },\n                            {\n                                text:'Hora de criar os estilos.',\n                                code:`\n//appHome.styles.js\n\nexport default () => /*css*/ \\` \n    app-home h1 { color: blue }\n\\`                                \n                                `\n                            },\n                            {\n                                text:'Veja, os estilos são retornados por uma função simples. Note que o seletor app-home foi utilizado para definir o escopo de aplicação do estilo css. Como para r9x o nome do componente é a propriedade name da função fábrica que o define e elementos customizados no html5 possuem um tagName separado por \"-\", o seletor do componente depois do parse do seu nome ser aplicado torna-se app-home.'\n                            },\n                            {\n                                text:'Quando o componente for carregado e a aplicação inicializar, será criado a tag app-home como elemento do componente. Portanto, somente os elementos html filhos de app-home sofrerão modificações visuais decorrente do estilo css aplicado.'\n                            },\n                            {\n                                text: 'Esse é um padrão css simples que resolvem muitos problemas de escopo de estilização.'\n                            },\n                            {\n                                text:'Pronto, agora o componente appHome importado em main.js será carregado e renderiado corretamente através do roteador da biblioteca.',\n                                code: `\n//main.js\n\n/*...codigo omitido...*/\nimport { appHome } from './components/appHome/appHome.component'\n\n/*...codigo omitido... */\n\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#\\/$/, component: appHome },\n    ]\n}\n\n/*...codigo omitido...*/                                \n                                `\n                            },\n                            {\n                                text:'Alterne para o navegador e veja o resultado. Se tudo deu certo, agora a página principal (home) exibe o título appHome.'\n                            }\n                        ]\n                    },\n                    {\n                        title:'Componentes reaproveitáveis',\n                        paragraphs: [\n                            {\n                                text: 'A partir desse ponto, a coisa começa a ficar mais séria. Precisamos pensar em reaproveitamento de código. Podemos usar como exemplo o título presente em appHome, ele poderia ser um outro componente e receber o texto do título através de propriedades reativas. Vamos fazer isso agora.',\n                            },\n                            {\n                                text: 'Crie dentro da pasta componentes a pasta appTitle e dentro dela os arquvivos do componente de título.',\n                                code:`\nappTitle.component.js\nappTitle.template.js\nappTitle.styles.js                                \n                                `\n                            },\n                            {\n                                text:'Hora de implementar o template do componente. Utilize o código abaixo:',\n                                code: `\n//appTitle.template.js\n\nexport default ({props, state}) => /*html*/ \\`\n<div>\"teste\"</div>\n\\`\n\n`\n                            },\n                            {\n                                text: 'Observe o seguinte treco de código:',\n                                code: `\n<h1 class=\"title \\${props.object.style ? props.object.style : ''}\">\\${props.object.title}</h1>\n                                `\n                            },\n                            {\n                                text:'Estamos acessando as propriedades reativas através do objeto props que as contém. Observe que esse objeto possui a propriedade object que disponibiliza as propriedades como um objeto. Nesse caso estamos acessando, a propriedade title do objeto object.',\n                            },\n                            {\n                                text: 'No momento é assim que r9x converte um texto simples em propriedades reativas. Essas propriedades serão fornecidas para o template através da tag do componente definida dentro dos templates de outros componentes. Logo mais veremos isso em prática.'\n                            },\n                            {\n                                text:'Ainda observando o trecho acima, note que a avaliação dentro da propriedade html class verifica se um estilo customizado foi informado como propriedade. Em caso afirmativo esse estilo será aplicado, caso contrário nada ocorre. Isso nos permite definir multiplos estilos visuais para o componente. Dessa forma a interface do componente pode se comportar de maneira diferente dependendo de onde ele for instanciado e de acordo com o estilo fornecido para o template como propriedade. '\n                            },\n                            {\n                                text:'Hora de definir os estilos do template. Utilize o código abaixo:',\n                                code:`\n//appTitle.styles.js\n\nexport default () => /*css*/ \\`\n    app-title .title-wrapper {\n        margin-bottom:15px;\n    }\n    app-title .title-wrapper,\n    app-title .title {\n        display:block;\n        float:left;\n        width:100%;\n    }\n\n    app-title .title {\n        padding:15px;\n        border-bottom: 1px #ebebeb solid;\n        font-size: 1.2em;\n        text-transform: uppercase;\n        text-align:left;\n    }\n\n    app-title .white { background:#fff; color: #6c31bf}\n    app-title .purple { background:#6c31bf; color:#fff;}\n\\`                                \n                                `\n                            },\n                            {\n                                text:'O bloco acima não tem segredos. Definimos a estilização padrão e dois temas que serão aplicados se um estilo customizado for fornecido como propriedade para o template do componente. Falavamos disso, instantes através. Esses temas são \"white & purple, definidos nas duas últimas linhas de css dos estilos do componente.'\n                            },\n                            {\n                                text:'Hora de juntar tudo e definir o arquivo principal do componente.',\n                                code:`\n//appTitle.component.js\n\nimport template from './appTitle.template'\nimport styles from './appTitle'\n\nconst appTitle = () => {\n    return {\n        template,\n        styles\n    }\n}\n\nexport {\n    appTitle\n}                                \n                                `\n                            },\n                            {\n                                text:'Perceba que apenas importamos o template e os estilos dentro de appTitle.component.js, e os retornamos através da factory appTitle. Por fim, expotamos a função construtora appTitle que agora pode ser importada pelo componente appHome.',\n                                code:`\n//appHome.componente.js\n\nimport template from './appHome.template'\nimport styles from './appHome.styles'\n\nimport { appTitle } from '../appTitle/appTitle.component'\n\nimport { store } from '../../store'\n\nconst appHome = () => {\n\n    const children = () => ({\n        appTitle,\n    })\n\n    return {\n        template,\n        styles,\n        children,\n    }\n    \n}\n\nexport { appHome }                                \n                                `\n                            },\n                            {\n                                text:'Algumas coisas estão diferentes no componente appHome. Primeiro appTitle foi importado:',\n                                code:`\nimport { appTitle } from '../appTitle/appTitle.component'\n\n`\n                            },\n                            {\n                                text:'Em seguida uma nova função (children) foi inserida dentro de appHome e esta função retornando um objeto que contém appTitle.',\n                                code:`\n    const children = () => ({\n        appTitle,\n    })                                \n                                `\n                            },\n                            {\n                                text:'Por fim, essa função children está sendo retornada junto com o template e seus estilos para factory appHome:',\n                                code:`\n    return {\n        template,\n        styles,\n        children,\n    }                                \n                                `\n                            },\n                            {\n                                text:'Quase tudo em r9x são factory functions. Children é uma fábrica que retorna os componentes filhos para serem instancidos através do componente pai. Nesse caso específico, appTitle passa a ser filho de appHome. Por isso, children foi inserida no escopo do componente e retornada como uma propriedade pela factory function appHome. É dessa forma que componenetes filhos são definidos em r9x.'\n                            },\n                            {\n                                text: 'Uma vez definido um compnente filho através de children, o componente pai vai procurar em seu template a tag do componente filho para intanciá-lo. Para cada tag do componente filho encontrada no template do componente pai, uma nova instância do componente filho será criada e relacionada. Veja abaixo:',\n                                code:`\n//appHome.template.js\n\nexport default ({props, state}) => /*html*/ \\`\n    <app-title data-props=\"\\{'title':'Vitrine', 'style':'purple'\\}\"></app-title>\n\\`\n\n`\n                            },\n                            {\n                                text:'Ao acessar a rota principal da aplicação, você perceberá que o componente title já está renderizado e exibindo o valor do título informado via propriedade e que o estilo purple também passado por propriedade foi aplicado.'\n                            },\n                            {\n                                text:'A verdade é que ainda faremos mais alterações na home. O que faremos agora é definir a estrutura completa dessa página e ela nos servirá de guia para criar os demais componentes que a compoem. O código completo do template do componente appHome fica assim:',\n                                code:`\n/*appHome.template.js*/\n\nexport default ({ props, state }) => /*html*/ \\`\n    <div class=\"home-wrapper\">\n        <app-title data-props=\"{'title':'Vitrine', 'style':'purple'}\"></app-title>\n        <div class=\"movie-list\">\n            <app-title data-props=\"{'title':'Filmes', 'style':'white'}\"></app-title>\n            <app-search data-props=\"{'storeKey':'movieList', 'placeholder':'Buscar filmes'}\"></app-search>\n            <app-movie-list></app-movie-list>\n        </div>\n        <div class=\"user-list\">\n            <app-title data-props=\"{'title':'Clientes', 'style':'white'}\"></app-title>\n            <app-search data-props=\"{'storeKey':'userList', 'placeholder':'Buscar clientes'}\"></app-search>\n            <app-user-list> </app-user-list>\n        <\\ div>\n        <div class=\"sidebar\">\n            <app-sidebar data-props=\"{'showButtons':true, 'buttons':['cancel', 'confirm']}\"></app-sidebar> \n        </div>\n    </div>\n\\`                             \n`\n                            },\n                            {\n                                text:'Precisamos criar mais 4 componentes de acordo com o códgo acima. Os componentes são appSearch, appMovieList, appUserList e appSidebar.'\n                            },\n                            {\n                                text:'Faremos isso a partir da próxima sessão. Mas antes, precisamos introduzir o restante dos estilos do componente. O código completo fica assim:',\n                                code:`\n/*appHome.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-home .home-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n    }\n\n    app-home .movie-list,\n    app-home .user-list {\n        display:block;\n        float:left;\n        width:calc(50% - 7.5px);\n        padding:15px;\n    }\n\n    app-home .user-list {\n        margin-left:15px;\n    }\n\n    app-home .sidebar {\n        display:block;\n        float:right;\n        width:250px;\n        position:relative;\n    }\n\\`\n`\n                            }\n                        ]\n                    },\n                    {\n                        title:'Buscas - appSearch',\n                        paragraphs: [\n                            {\n                                text:'Essa aplicação exibirá através do componente appHome uma lista de filmes e clientes. Por isso, precisamos de uma forma eficiente para filtrar os filmes e os clientes e tornar mais fácil a vida do usuário que vai operar o app.'\n                            },\n                            {\n                                text:'Destro da pasta components crie os arquivos:',\n                                code:`\nappSearch.component.js\nappSearch.template.js\nappSearch.stylessss.js\n                                \n`\n                            },\n                            {\n                                text:'Comece implementando o template do componente.',\n                                code:`\n/*appSearch.template.js*/\n\nexport default ({props, state}) => /*html*/ \\`\n    <div class=\"search-wrapper\">\n        <input type=\"text\" class=\"search-input\" placeholder=\"\\${props.object.placeholder}\">\n    </div>\n\\`                                \n`\n                            },\n                            {\n                                text:'Note que o template acessa a propriedade reativa \"placeholder\", essa propriedade define o placeholder do input da busca.'\n                            },\n                            { \n                                text:'Hora de definir os estilos do componente. O código css fica assim:',\n                                code:`\nexport default () => /*css*/ \\`\n    app-search .search-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n        margin-bottom:15px;\n        border-radius:4px;\n        background:#f9f9f9;\n    }\n\n    app-search .search-input {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n        border:0;\n        border-bottom:2px #fff solid;\n        border-radius:4px;\n        outline:0;\n        background:#fff;\n        color:#666;\n        text-transform: uppercase;\n        font-size:.875em\n    }\n\n    app-search .search-input:focus {\n        border-bottom: 2px #ebebeb solid;\n    }\n\\`\n`\n                            },\n                            {\n                                text:'Não há segredos aqui. Esse é apenas um estilo css que você poderia escrever para formatar qualquer input de texto.'\n                            },\n                            {\n                                text:'Agora importe o template e os estilos dentro de appSearch.component.js, o códgo fica assim:',\n                                code:`\n/*appSearch.component.js*/\n\nimport template from './appSearch.template.js'\nimport styles from './appSearch.styles.js'\n\nconst appSearch = () => {\n\n    return {\n        template,\n        styles\n    }\n\n}\n\nexport { appSearch }\n\n`\n                            },\n                            {\n                                text:'É preciso implementar uma forma para o usuário interagir com o componente e realizar a filtragem dos dados. É possível fazer isso utilizando eventos. Veja o código:',\n                                code:`\n    const events = ({on, query, methods, directives}) => ({\n        onType () {\n            const input = query('.search-input')\n            let value = ''\n\n            on('keyup', [input], ({target}) => { \n                if(target.value) value = target.value\n                methods.filterMovies({target})\n            })\n        }\n    })\n\n    `\n                            },\n                            {\n                                text:'A factory events acima está criando um manipulador de eventos denominado onType. Ao ser executado após a renderização do template o evento será aplicado a tag alvo.'\n                            },\n                            {\n                                text:'A factory events recebe um parâmtro que dá acesso a alguns itens importantes. Esses itens são:',\n                                code:`\n/*html*/\non: Função responsável por fazer o bind de eventos\nquery: Função responsável por buscar elementos no contexto do componente\nmethods: Um objeto contendo todos os métodos do componente\ndirectives: Um objeto contendo todas as diretivas relacionadas ao componente\n\n`\n                            },\n                            {\n                                text:'Com os recursos acima podemos buscar elementos e adicionar eventos executando métodos do componente sempre que um desses eventos ocorrer. E exatamente isso que está acontecendo no código abaixo:',\n                                code:`\nonType () {\n    const input = query('.search-input')\n    let value = ''\n\n    on('keyup', [input], ({target}) => { \n        if(target.value) value = target.value\n        methods.filterMovies({target})\n    })\n\n}\n                                `\n                            },\n                            {\n                                text:'Primeiro, através da função query, obtemos o elemento do input. Em seguida declaramos value que armazenará o cache do valor digitado no input. Depois através da função on, o evento keyup é definido. Observe que o input selecionado é passado para essa função dentro de um array. Isso porque on manipula uma série de elementos de uma única vez. Em seguida é passado um callback para on que obtem o target do evento e armazena o valor da propriedade value do target dentro da variável de cache value. Por fim, o método filterMovies recebe o target e realiza a filtragem dos dados.'\n                            },\n                            {\n                                text:'Óbvio, esse código não funciona ainda. Precisamos dicionar o método filterMovies. O código fica assim:',\n                                code:`\nconst methods = ({props, state}) => ({\n\n    filterMovies ({target}) {\n        const { storeKey } = props.get().object\n        const { value } = target\n        const regex = new RegExp(\\`\\${ value }\\`,'ig')\n\n        const result = store.get()[storeKey].filter( item => {\n            const itemKeys = Object.keys(item)\n            return itemKeys.filter(key => item[key].toString().match(regex)).join('')\n        })\n\n        store.update((storeData) => {\n            if(!storeData.hasOwnProperty('search')) storeData.search = {}\n            storeData.search[storeKey] = result\n        })\n\n    }\n})\n                                `\n                            },\n                            {\n                                text:'Primeiro adicionamos a factory de métodos \"methods\". Essa factory recebe um parâmetro contendo a propriedades reativas e o state local do componente.',\n                                code: `\nconst methods = ({props, state}) => ({ })\n                                `\n                            },\n                            {\n                                text:'Declaramos no objeto retornado os métodos que vão decorar o componente. Por causa do clousure esses métodos possuem acesso a props e state.',\n                                code:`\n/*codigo omitido*/\n\n{\n    filterMovies ({target}) { }\n}\n                                `\n                            },\n                            {\n                                text:'Dentro de filterMovies, obtemos a proriedade storeKey para selecionar a chave de dados a ser filtrada na store de dados que ainda não existe e precisa ser criada. Em seguida, value é extraído do target recebido como parametro. Por fim, value é transformado em uma expressão regular.',\n                                code:`\nconst { storeKey } = props.get().object\nconst { value } = target\nconst regex = new RegExp(\\`\\${ value }\\`,'ig')                                \n                                `,\n                            },\n                            {\n                                text:'Observe o treche a seguir:',\n                                code: `\n                                \nconst result = store.get()[storeKey].filter( item => {\n    const itemKeys = Object.keys(item)\n    return itemKeys.filter(key => item[key].toString().match(regex)).join('')\n})\n\n`\n                            },\n                            {\n                                text:'O código acima acessa a chave da store dedados assim:',\n                                code:`\nstore.get()[storeKey]\n\n`\n                            },\n                            {\n                                text:'Então, filter percode os objetos da chave selecionada na store:',\n                                code: `\nstore.get()[storeKey].filter( item => {\n\n})                                \n`\n                            },\n                            {\n                                text:'Por fim, caso a expressão regular avaliadora teste true para os objetos dentro da chave selecionada na store, filter retorna um array contendo esses objetos.',\n                                code: `\nconst itemKeys = Object.keys(item)\nreturn itemKeys.filter(key => item[key].toString().match(regex)).join('')                                \n\n`\n                            },\n                            {\n                                text:'Observe o seguinte código:',\n                                code:`\nstore.update((storeData) => {\n    if(!storeData.hasOwnProperty('search')) storeData.search = {}\n    storeData.search[storeKey] = result\n}) \n\n`\n                            },\n                            {\n                                text:'O método update da store, recebe um callback que tem acesso aos dados da store e permite atualizá-los e notificar a todos os observadores da store.',\n                                code: `\nstore.update((storeData) => { })\n\n`\n                            },\n                            {\n                                text:'No calback passado para update está sendo avaliado se existe a chave search na store. Se essa chave não existir, será criada dinâmicamente e em seguida a ela será abribuido o resultado a busca.',\n                            code:`\nif(!storeData.hasOwnProperty('search')) storeData.search = {}\nstoreData.search[storeKey] = result\n                                `\n                            },\n                            {\n                                text:'Chegou o momento de criar a store, pois, logo a diante será necessário observar as mudanças nos ddos da store para atualizar o state local dos componentes da aplicação.'\n                            },\n                            {\n                                text:'Na raiz do projeto crie o arquivo store.js e insira dentro o código abaixo:',\n                                code:`\nimport { storeFactory } from 'r9x_js'\n\nconst store = storeFactory({\n    movieList: [\n        { id: 1, title: 'Ultimos dias', description:'Mussum Ipsum, cacilds vidis litro abertis. Tá deprimidis, eu conheço uma cachacis que pode alegrar sua vidis. Quem num gosta di mé,'},\n        {id:2, title:'Fim dos dias', description:'Mussum Ipsum, cacilds vidis litro abertis. Tá deprimidis, eu conheço uma cachacis que pode alegrar sua vidis. Quem num gosta di mé,'},\n        {id:3, title:'Málevola', description:'Mussum Ipsum, cacilds vidis litro abertis. Tá deprimidis, eu conheço uma cachacis que pode alegrar sua vidis. Quem num gosta di mé,'},\n        {id:4, title:'A rainha má', description:'Mussum Ipsum, cacilds vidis litro abertis. Tá deprimidis, eu conheço uma cachacis que pode alegrar sua vidis. Quem num gosta di mé,'},\n    ],\n    userList: [\n        { id: 1, name: 'Rodrigo', lastName:'Rocha', cpf:'9995586655', movies:[] },\n        { id: 2, name: 'Roberto', lastName:'Montana', cpf:'6665544788', movies:[] },\n        { id: 3, name: 'Rafaela', lastName:'Fontes', cpf:'2254447895', movies:[] },\n        { id: 4, name: 'Tatiana', lastName:'Alvarez', cpf:'3321145589', movies:[] },        \n    ],\n    operation: {\n        client: null,\n        movie: null\n    },\n})\n\nexport { store }                                \n                                `\n                            },\n                            {\n                                text:'Observe que r9x disponibiliza uma função \"storeFactory\" para criar a store observável. Em aplicações mais complexa multiplas stores podem ser criadas.',\n                            },\n                            {\n                                text:'storeFactory recebe um objeto que contém as chaves de dados da store  sendo criobservávelada e a retorna.'\n                            },\n                            {\n                                text:'Por fim, a store criada é exportada e pode ser observada por qualquer componente. Mas, para isso o componente precisa importá-la em suas dependências. Faremos isso no componente appSearch.'\n                            },\n                            {\n                                text: 'o códgo completo do componente fica assim:',\n                                code: `\n/*appSearch.component.js*/\n\nimport template from './appSearch.template'\nimport styles from './appSearch.styles'\nimport { store } from '../../store'\n\nconst appSearch = () => {\n\n    const events = ({on, query, methods, directives}) => ({\n        onType () {\n            const input = query('.search-input')\n            let value = ''\n\n            on('keyup', [input], ({target}) => { \n                if(target.value) value = target.value\n                methods.filterMovies({target})\n            })\n\n        }\n    })\n\n    const methods = ({props, state}) => ({\n        getSelector (input) {\n            return input.getAttribute('key')\n        },\n\n        filterMovies ({target}) {\n            const { storeKey } = props.get().object\n            const { value } = target\n            const regex = new RegExp(\\`\\${ value }\\`,'ig')\n\n            const result = store.get()[storeKey].filter( item => {\n                const itemKeys = Object.keys(item)\n                return itemKeys.filter(key => item[key].toString().match(regex)).join('')\n            })\n\n            store.update((storeData) => {\n                if(!storeData.hasOwnProperty('search')) storeData.search = {}\n                storeData.search[storeKey] = result\n            })\n\n        }\n    })\n\n    return {\n        template,\n        styles,\n        events,\n        methods,\n    }\n}\n\nexport { appSearch }\n                                \n`\n                            },\n                            {\n                                text:'Na próxima sessão, criaremos os componentes appMovieList e appMovie. Esses componentes são responsáveis por listar os filmes e exibir o resultado da filtragem realizada pelo componente appSeaarch.'\n                            }\n                        ]\n                    },\n                    {\n                        title:'appMovieList - Listando os filmes da store',\n                        paragraphs: [\n                            { text:'O componente appMovieList deve exibir a lista de filmes através do componente filho appMovie e garantir que a view seja atualizada sempre e somente quando a store de dados sofrer alterações.'},\n                            {\n                                text:'Crie os arquivos abaixo dentro da pasta appMovieList na pasta componentes:',\n                                code:`\nappMovieList.template.js                                \nappMovieList.styles.js                                \nappMovieList.component.js       \n\n`\n                            },\n                            {\n                                text:'No arquivo de template insira o código abaixo:',\n                                code:`\n/*appMovieList.template.js*/\n\nexport default ({props, state}) => {\n\n    const repeat = (template, dataArr) => {\n        return dataArr.map(item => template(item)).join('')\n    }\n\n    const movieTpl = (movie) => /*html*/ \\`\n        <app-movie data-props=\"{'movieId': '\\${movie.id}'}\"></app-movie>\n    \\` \n\n    return /*html*/ \\`\n        <div class=\"movie-list-wrapper\">\n            \\${repeat(movieTpl, state.movieList)}    \n        </div>\n    \\`\n}\n\n`\n                            },\n                            {\n                                text:'Observe o trecho abaixo:',\n                                code:`\n    const repeat = (template, dataArr) => {\n        return dataArr.map(item => template(item)).join('')\n    }\n\n`\n                            },\n                            {\n                                text: 'A função repeate tem o dever de repetir um fragmento de template baseado em um array de dados e retornar as repetiçoes desse fragmento todas de uma só vez.'\n                            },\n                            {\n                                text:'No trecho abaixo, criamos um fragmeno de template que contém a tag do componente filho appMovie e essa tag recebe uma propriedade reativa movieId que mais tarde será utilizada para selecionar um filme a ser exibido por cada uma das repetições do componente appMovie.',\n                                code: `\nconst movieTpl = (movie) => /*html*/ \\`\n    <app-movie data-props=\"{'movieId': '\\${movie.id}'}\"></app-movie>\n\\` \n`\n                            },\n                            {\n                                text:'Por fim, o código abaixo utiliza o fragmento de template criado anteriormente e a função repeat para repetir o componente appMovie lhe fornecendo a propriedade reativa movieId.',\n                                code:`\nreturn /*html*/ \\`\n    <div class=\"movie-list-wrapper\">\n        \\${repeat(movieTpl, state.movieList)}    \n    </div>\n\\`                                \n`\n                            },\n                            {\n                                text:'hora de criar mais um css clichê para estilizar o componente appMovieList.',\n                                code: `\n/*appMovieList.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-movie-list .movie-list-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n    }\n\\`\n\n`\n                            },\n                            {\n                                text:'Chegou o momento de implementar a lógica do componente. Utilize o código abaixo:',\n                                code: `\nimport template from './appMovieList.template'\nimport styles from './appMovieList.styles'\n\nimport { appMovie } from '../appMovie/appMovie.component'\n\nimport { store } from '../../store'\n\nconst appMovieList = () => {\n\n    const state = {\n        movieList: store.get().movieList,\n    }\n\n    const children = () => ({\n        appMovie\n    })\n\n\n    const hooks = ({ state, methods }) => ({\n        beforeOnInit() {\n            store.subscribe(({ search }) => {\n                const movieList = search?.movieList\n                const hasChanges = methods.hasChanges(state.get().movieList, movieList)\n                if(hasChanges && movieList) state.set({ movieList })\n            })\n        }\n    })\n\n    const methods = () => ({\n\n        hasChanges(oldState, newState) {\n            const oldStateJson = JSON.stringify(oldState)\n            const newStateJson = JSON.stringify(newState)\n            return oldStateJson !== newStateJson\n        }       \n\n    })\n\n    return {\n        state,\n        template,\n        styles,\n        children,\n        hooks,\n        methods\n    }\n}\n\nexport { appMovieList }\n                                `\n                            },\n                            {\n                                text:'Observe que importamos o template, os estilos, a store de dados e o componente filho appMovie do qual appMovieList depende para exibir cada um dos filmes.',\n                                code:`\nimport template from './appMovieList.template'\nimport styles from './appMovieList.styles'\n\nimport { store } from '../../store'\nimport { appMovie } from '../appMovie/appMovie.component'\n\n`\n                            },\n                            {\n                                text:'Em seguida o state local do componente foi declarado.',\n                                code:`\nconst state = {\n    movieList: store.get().movieList,\n}\n                                `\n                            },\n                            {\n                                text: 'Após o state ser declarado, registramos o componente appMovie como filho de appMovieList',\n                                code:`\nconst children = () => ({\n    appMovie\n})      \n\n`\n                            },\n                            {\n                                text:'Observe que também registramos os hooks e os métodos para este componente.',\n                                code:`\nconst hooks = ({ state, methods }) => ({\n    beforeOnInit() {\n        store.subscribe(({ search }) => {\n            const movieList = search?.movieList\n            const hasChanges = methods.hasChanges(state.get().movieList, movieList)\n            if(hasChanges && movieList) state.set({ movieList })\n        })\n    }\n})\n\nconst methods = () => ({\n\n    hasChanges(oldState, newState) {\n        const oldStateJson = JSON.stringify(oldState)\n        const newStateJson = JSON.stringify(newState)\n        return oldStateJson !== newStateJson\n    } \n                            \n\n`\n                            },\n                            {\n                                text: 'Veja que o componente se inscreve para ouvir mudanças na store através da função subscribe da própria store que recebe um objejo \"search\" que pode conter uma lista de filmes filtrados pelo componente de busca.',\n                                code:`\n    beforeOnInit() {\n        store.subscribe(({ search }) => {\n            const movieList = search?.movieList\n            const hasChanges = methods.hasChanges(state.get().movieList, movieList)\n            if(hasChanges && movieList) state.set({ movieList })\n        })\n    }                                \n                                `\n                            },\n                            {\n                                text:'No trecho de código a seguir, o componente identifica que houve uma mudança nos dados da store e verifica se os dados do state local estão diferentes dos novos dados presentes na store. Caso esteja o componente atualiza o state local e consequentemente seu template com os novos dados da store.',\n                                code:`\nconst movieList = search?.movieList\nconst hasChanges = methods.hasChanges(state.get().movieList, movieList)\nif(hasChanges && movieList) state.set({ movieList })\n                                `\n                            },\n                            {\n                                text:'Para detectar diferenças no state local, o componente faz uso da função hashChanges que compara o state local com a store.',\n                                code: `\nhasChanges(oldState, newState) {\n    const oldStateJson = JSON.stringify(oldState)\n    const newStateJson = JSON.stringify(newState)\n    return oldStateJson !== newStateJson\n}          \n\n`\n                            },\n                            {\n                                text: 'Por fim, a factory appMovieList retorna todos os recursos necessários para criar um componente e é exportada para ser usada no momento adequado.',\n                                code: `\n\n/*codigo omitido*/\n\nconst appMovieList = () => {\n\n/*codigo omitido*/\n\n    return {\n        state,\n        template,\n        styles,\n        children,\n        hooks,\n        methods\n    }\n}\n\nexport { appMovieList }\n\n                                `\n                            },\n                            {\n                                text: 'Agora é uma boa hora para importar os componentes appTitle, appSearch e appMovieList em appHome. Embora não seja possível testar a aplicação sem criar o componente appMovie.',\n                                code:`\n                                \n/*appHome.component.js*/\n\nimport template from './appHome.template.js'\nimport styles from './appHome.styles.js'\n\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appSearch } from '../appSearch/appSearch.component'\nimport { appMovieList } from '../appMovieList/appMovieList.component'\n\nconst appHome = () => {\n\n    const children = () => ({\n        appTitle,\n        appSearch,\n        appMovieList,\n    })\n    \n    return  {\n        template,\n        styles\n    }\n\n}\n\nexport { appHome }  \n                              `\n                            },\n                            {\n                                text: 'Na próxima sessão criaremos o componente appMovie e então poderemos testar a aplicação parcialmente.'\n                            }\n                        ]\n                    },\n                    {\n                        title:'AppMovie - Exibindo dados diferentes para cada instância.',\n                        paragraphs: [\n                            {\n                                text: 'Cada vez que o componente appMovie é renderizado, uma nova instância é criada. Como o state é local, os dados presentes no state de cada instância são independentes.'\n                            },\n                            {\n                                text: 'Dentro da pasta components cria a pasta appMovie e dentro dela os arquivos abaixo:',\n                                code: `\n/*components\\/appMovie/*                                \n\nappMovie.component.js\nappMovie.template.js\nappMovie.styles.js\n                                `\n                            },\n                            {\n                                text:'Comece definindo o template do componente appMovie: ',\n                                code:`\n/*appMovie.template.js*/\n\nexport default ({props, state, methods}) => {\n\n    if (!methods.hasMovies()) return ''\n    const movie = methods.getMovie(props.object.movieId)\n    const notHaveButtons = () => props.object.hideButtons && props.object.hideButtons === true\n\n    const buttonsTpl = () => {\n        if (notHaveButtons()) return ''\n        return /*html*/ \\`\n            <app-mark-to data-props=\"{'type':'movie', 'movieId':'\\${props.object.movieId}'}\"></app-mark-to>\n        \\`\n    }\n\n    return /*html*/ \\`\n    <div class=\"movie-wrapper \\${methods.isSelected(props.object.movieId) && !notHaveButtons() ? 'selected' : ''}\">\n        <div class=\"title\">\\${movie.title}</div>\n        <div class=\"description\">\\${movie.title} - \\${movie.description}</div>\n        <div class=\"buttons\">\n            \\${buttonsTpl()}\n        </div>\n    </div>\n\\`\n}\n\n                                `\n                            },\n                            {\n                                text: 'Observe que dessa vez, o template recebe a propriedade methods. Isso é muito útil quando o template precisa de lógica adicional para fazer validações ou obter dados computados.'\n                            },\n                            {\n                                text:'Como o template recebe a propriedade methods, a função getMovie pode ser acessaa para recuperar os dados que o template deve exibir. Esses dados são armazenados na variavel \"movie\".'\n                            },\n                            {\n                                text: 'No trecho de código abaixo,  a funçao notHaveButtons verifica se o fragmento de template \"buttonsTpl\" declarado logo abaixo dela deve ser exibido.',\n                                code:`\n    const notHaveButtons = () => props.object.hideButtons && props.object.hideButtons === true\n\n    const buttonsTpl = () => {\n        if (notHaveButtons()) return ''\n        return /*html*/ \\`\n            <app-mark-to data-props=\"{'type':'movie', 'movieId':'\\${props.object.movieId}'}\"></app-mark-to>\n        \\`\n    }                                \n                                `\n                            },\n                            {\n                                text:'Veja que no fragmento de template de botões \"buttonsTpl\" está contido o componente appMarkTo:',\n                                code:`\n<app-mark-to data-props=\"{'type':'movie', 'movieId':'\\${props.object.movieId}'}\"></app-mark-to>                                \n                                `\n                            },\n                            {\n                                text:'Esse componente recebe através de propriedades reativas (type & movieId) informações que serão úteis na hoje de definir que filmes estão sendo alugados. Logo adiante precisaremos criar esse componente. Mas, por equanto pode ignorá-lo.'\n                            },\n                            {\n                                text:'Por fim, um conjunto de tags do fragmento principal do template é retornado.',\n                                code:`\n    return /*html*/ \\`\n    <div class=”movie-wrapper \\${methods.isSelected(props.object.movieId) && !notHaveButtons() ? 'selected' : ''}”>\n        <div class=”title”>\\${movie.title}</div>\n        <div class=”description”>\\${movie.title} - \\${movie.description}</div>\n        <div class=”buttons”>\n            \\${buttonsTpl()}\n        </div>\n    </div>\n\\`                                \n                                `\n                            },\n                            {\n                                text: 'Observe o trecho de código:',\n                                code: `\n<div class=\"movie-wrapper \\${methods.isSelected(props.object.movieId) && !notHaveButtons() ? 'selected' : ''}\">\n                                `\n                            },\n                            {\n                                text:'Esse trecho de código valida se os dados do componente foram marcados para locação e se o componente está exibindo botões de controle ou não. Caso tenha botões definidos, o seletor selected será aplicada ao template. Parece estranha a segunda validação. Porém, assim que o componente sidebar for implementado essa validação fará total sentido.'\n                            },\n                            {\n                                text: 'Hora de aplicar os estilos do componente:',\n                                code:`\n/*appMovie.template.js*/\n\nexport default () => /*css*/ \\`\n\n    app- movie.movie - wrapper {\n        display: block;\n        float: left;\n        width: 100 %;\n        padding: 15px;\n        margin- bottom: 15px;\n        border- radius: 4px;\n        border: 1px #f7f6f8 solid;\n        background:#fff;\n        box- shadow: 3px 3px 3px #f4f3f6\n    }\n\n    app- movie.selected { border- color:#2ad58e}\n\n    app - movie.title {\n        font - weight: 700\n    }\n\n    app - movie.title,\n        app - movie.description {\n        display: block;\n        float: left;\n        width: 100 %;\n        padding - bottom: 15px;\n        border - bottom: 1px #ebebeb solid;\n        color:#666;\n        font - size: 1em;\n        text - transform: uppercase;\n        line - height: 1.5em\n    }\n\n    app - movie.description {\n        text - transform: none;\n        padding - top: 15px;\n        border - bottom: none;\n        font - weight: 500\n    }\n\n    app - movie.buttons {\n        display: block;\n        float: left;\n        width: 100 %;\n        padding - top: 15px;\n        text - align: right;\n    }\n\\`\n\n                                `\n                            },\n                            {\n                                text:'Agora utilize o código abaixo para implementar o componente.',\n                                code: `\n/*appMovie.component.js*/\n\nimport template from './appMovie.template'\nimport styles from './appMovie.style'\nimport { appMarkTo } from '../appMarkTo/appMarkTo.component'\nimport { store } from '../../store'\n\nconst appMovie = () => {\n\n    const state = {\n        movieList: store.get().movieList,\n        selected: false\n    }\n\n    const children = () => ({\n        appMarkTo\n    })\n\n    const hooks = ({methods}) => ({\n\n        beforeOnInit() {\n            store.subscribe((payload) => {\n                methods.movieInOperation(payload) ? methods.selectMovie() : methods.unselectMovie()\n            })\n        },        \n\n    })\n\n    const methods = ({props, state}) => ({\n\n        getMovie (movieId) {\n            const { movieList } = state.get()\n            return movieList.find( movie => +movie.id === +movieId)\n        },\n\n        hasMovies () {\n            const { movieList } = state.get()\n            return movieList.length\n        },\n\n        isSelected(movieId) {\n            const { operation } = store.get()\n            return (operation.movie !== null && +operation.movie.id === +movieId)\n        },\n\n        selectMovie() {\n            state.set({ selected: true })\n        },\n        unselectMovie() {\n            state.set({ selected: false })\n        },\n\n        movieInOperation(dataStore) {\n            const { operation } = dataStore\n            const { object } = props.get()\n            return operation.movie !== null && +operation.movie.id === +object.movieId\n        }\n\n    })\n\n    return {\n        state,\n        template,\n        styles,\n        children,\n        hooks,\n        methods,\n    }\n}\n\nexport { appMovie }\n\n                                `\n                            }, {\n                                text:'Parece que muito está acontecendo e é verdade. Mas todas as operações realizadas são simples.'\n                            },\n                            {\n                                text:'Primeiro importamos as dependências do componente, incusive o componente filho appMarkTo e a store',\n                                code: `\nimport template from './appMovie.template'\nimport styles from './appMovie.style'\nimport { appMarkTo } from '../appMarkTo/appMarkTo.component'\nimport { store } from '../../store'                                \n                                `\n                            },\n                            {\n                                text: 'Logo depois o state local é declarao:',\n                                code: `\nconst appMovie = () => {\n    const state = {\n        movieList: store.get().movieList,\n        selected: false\n    }    \n}                                \n                                `\n                            },\n                            {\n                                text: 'Na sequência, appMovie registra appMarkTo como filho.',\n                                code: `\nconst children = () => ({\n    appMarkTo\n})                                \n                                `\n                            },\n                            {\n                                text: 'AppMovie também registra o hook beforeOnInit e o utiliza para ouvir as mudanças na store de dados.',\n                                code: `\nconst hooks = ({methods}) => ({\n\n    beforeOnInit() {\n        store.subscribe((payload) => {\n            methods.movieInOperation(payload) ? methods.selectMovie() : methods.unselectMovie()\n        })\n    },        \n\n})                                \n                                `\n                            },\n                            {\n                                text:'Veja, toda vez que uma mudança ocorrer na store, o callback passado para store.subscribe será executado e então o método movieInOperation receberá os novos dados da store. Esse método verifica se existe um filme registrado para uma operação de locação na store.'\n                            },\n                            {\n                                text: 'A store possue a propriedade opertaion e caso um filme seja registrado na chave movie de operation, movieInOperation retornará true o que permite a execução do método selectMovie que destacará o layoute do componente selecionado. Agora, caso não exista um filme, unslectMovie vai garantir que nenhum template seja destacado.'\n                            },\n                            {\n                                text:'Esse métodos só podem ser acessados pelos hooks, porque foram declarados através da factory methods dentro do componente.',\n                                code: `\n   const methods = ({props, state}) => ({\n\n        getMovie (movieId) {\n            const { movieList } = state.get()\n            return movieList.find( movie => +movie.id === +movieId)\n        },\n\n        hasMovies () {\n            const { movieList } = state.get()\n            return movieList.length\n        },\n\n        isSelected(movieId) {\n            const { operation } = store.get()\n            return (operation.movie !== null && +operation.movie.id === +movieId)\n        },\n\n        selectMovie() {\n            state.set({ selected: true })\n        },\n        unselectMovie() {\n            state.set({ selected: false })\n        },\n\n        movieInOperation(dataStore) {\n            const { operation } = dataStore\n            const { object } = props.get()\n            return operation.movie !== null && +operation.movie.id === +object.movieId\n        }\n\n    })                                \n                                `\n                            },\n                            {\n                                text:'Os três primeiros métodos declarados no bloco acima são utilizados pelo template. Já falamos sobre eles. Já os métodos selectMovie e unselectMovie, são chamados para atualizar o state caso seja necessário. Por fim, o método movieInOperation é quem define qual dos dois métodos executar.'\n                            },\n                            {\n                                text: 'Como o componente escuta as mudanças nos dados da store, caso state.set seja chamado para atualizar o state em conformidade com os dados provenientes da store, então o template do componente será atualizado.'\n                            },\n                            {\n                                text:'Na próxima sessão será criado o componente appMarkTo.'\n                            }\n                        ]\n                    },\n                    {\n                        title:'AppMarkTO - Registrando operções de locação',\n                        paragraphs: [\n                            {\n                                text: 'O componente appMarkTo é reponsável por criar uma operação de locação e marcar os filmes para ela.'\n                            },\n                            {\n                                text: 'Crie uma nova pasta \"appMarkTo\" dentro da pasta components e dentro dela os arquivos abaixo:',\n                                code:`\n/*components/appMarkTo*/\n\nappMarkto.componente.js\nappMarkTo.template.js\nappMarkTo.styles.js                                \n                                `\n                            },\n                            {\n                                text:'Dentro do arquivo de template do componente introduza o código abaixo:',\n                                code: `\n/*appMarkTo.template.js*/\n\nexport default ({props, state}) => /*html*/ \\`\n    <div class=\"mark-to-wrapper\">\n        <button class=\"btn-mark\">Selecionar</button>\n    </div>\n\\`\n`\n                            },\n                            {\n                                text: 'O template desse componente é realmente simples. Possue apenas tags de marcação. Aproveite e implemente os estilos do componente.',\n                                code: `\n/*appMarkTo.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-mark-to .mark-to-wrapper {\n        display:inline-block;\n    }\n\n    app-mark-to .btn-mark {\n        display: block;\n        float: left;\n        width: 100%;\n        padding: 10px 15px;\n        border-radius: 4px;\n        font-size: .875em;\n        text-align: center;\n        border: 1px #2ad58e solid;\n        color: #2ad58e;\n        background: #f7f7f8;\n        text-decoration: none;\n        outline: none;\n        transition: .2s ease-in;\n        cursor: pointer;\n    }\n\n    app-mark-to .btn-mark:hover {\n        border: 1px #2ad58e solid;\n        color: #fff;\n        background: #2ad58e;        \n    }\n\n\\`                                \n`\n                            },\n                            {\n                                text:'Os estilos também são bem simples e apenas adicionam um comportamento visual elegante.'\n                            },\n                            {\n                                text: 'Hora de implementar o componente.',\n                                code:`\n/*appMarkTo.componente.js*/\n\nimport template from './appMarkTo.template'\nimport styles from './appMarkTo.styles'\nimport { store } from '../../store'\n\nconst appMarkTo = () => {\n\n    const events = ({query, on, methods}) => ({\n        \n        onClickToSelect () {\n            const btn = query('button')\n            on('click', [btn], (e) => {\n                methods.setOperation()\n            })\n        }\n        \n    })\n\n    const methods = ({props, state}) => {\n\n        const setUserOperation = (userId) => {\n            store.update((dataStore) => {\n                const user = dataStore.userList.find( user => +user.id === +userId)\n                dataStore.operation.client = user\n            })\n\n        }\n\n        const setMovieOperation = (movieId) => {\n            store.update((dataStore) => {\n                const movie = dataStore.movieList.find(movie => +movie.id === +movieId)\n                dataStore.operation.movie = movie\n            })\n\n        }\n\n        const setOperation = () => {\n            const { object } = props.get()\n            if(object.type && object.type === 'user') return setUserOperation(object.userId)\n            if(object.type && object.type === 'movie') return setMovieOperation(object.movieId)\n        }\n\n        return { setOperation }\n    }\n\n    return {\n        template,\n        styles,\n        events,\n        methods\n    }\n\n}\n\nexport {\n    appMarkTo\n}\n                                `\n                            },\n                            {\n                                text:'Observe que primeiro importamos as dependências do componente:',\n                                code: `\nimport template from './appMarkTo.template'\nimport styles from './appMarkTo.styles'\nimport { store } from '../../store'                                \n                                `\n                            },\n                            {\n                                text:'Na sequência, dentro da factor appMarkTo foram declarados os eventos do componente.',\n                                code:`\nconst events = ({query, on, methods}) => ({\n    \n    onClickToSelect () {\n        const btn = query('button')\n        on('click', [btn], (e) => {\n            methods.setOperation()\n        })\n    }\n    \n})                                \n                                `\n                            },\n                            {\n                                text:'Quando o evento de click ocorrer no botão do componente, uma operação será criada. Veja os métodos do componente.',\n                                code: `\n    const methods = ({props, state}) => {\n\n        const setUserOperation = (userId) => {\n            store.update((dataStore) => {\n                const user = dataStore.userList.find( user => +user.id === +userId)\n                dataStore.operation.client = user\n            })\n\n        }\n\n        const setMovieOperation = (movieId) => {\n            store.update((dataStore) => {\n                const movie = dataStore.movieList.find(movie => +movie.id === +movieId)\n                dataStore.operation.movie = movie\n            })\n\n        }\n\n        const setOperation = () => {\n            const { object } = props.get()\n            if(object.type && object.type === 'user') return setUserOperation(object.userId)\n            if(object.type && object.type === 'movie') return setMovieOperation(object.movieId)\n        }\n\n        return { setOperation }\n    }                                \n                                `,\n                            },\n                            {\n                                text: 'Note que setOperation acessa as propriedades reativas no caso a propriedade type para definir que tipo de operação de relacionamento está sendo criada.'\n                            },\n                            {\n                                text: 'Caso a propriedade type seja \"user\" a função setUserOperation obterá o usuário através do id de usuário fornecido através das propriedades reativas. Caso type seja movie a mesma lógica se aplica, mas, obtendo um filme ao invés de um usuário e a função executa será setMovieOperation.'\n                            },\n                            {\n                                text: 'Você deve ter notado uma diferença de sintaxe na declaração dos métodos desse componente. Isso acontece porque setOperation precisa acessar outros métodos no mesmo escopo. Então ao invés de retornar logo de inicio um objeto com os métodos dentro, foi melhor somente no fim da declaração dos métodos retornar um objeto literal criado manualmente. Veja abaixo uma comparação entre as duas técnicas.',\n                                code:`\n/*Primeira forma*/\nconst methods = () => ({\n    methodsInside () {}\n})\n\n/*Segunda Forma*/\nconst methods = () => {\n\n    const methodInClousure = () => {}\n\n    return {\n        methodInclousure\n    }\n}\n                                `\n                            },\n                            {\n                                text: 'Como o componente criado já foi importado dentro de appMovie, você não precisa fazer mais nada. Pode testar a aplicação.'\n                            },\n                            {\n                                text:'Ainda não é possivel completar uma operação de locação porque os componentes de listagem de usuários ou clientes ainda não existem. Portanto, será necessário criá-los na proxima sessão.'\n                            }                        \n                        ]\n                    },\n                    {\n                        title:'Listagem de usuários/clientes.',\n                        paragraphs: [\n                            {\n                                text:'Para exibir a lista de usuários e permitir que seja filtrada é preciso criar os componentes appListUser e appUser. Eles são bem parecidos com appMovieList e appMovie.',\n                            },\n                            {\n                                text: 'Dentro da pasta componentes crie a pasta appUserList e dentro dela os arquivos:',\n                                code: `\nappUserList.componente.js                                \nappUserList.template.js                                \nappUserList.styles.js                                \n                                `\n                            },\n                            {\n                                text:'Utilize o código abaixo para o template do componente.',\n                                code: `\n/*appUserList.template.js*/\n\nexport default ({props, state}) => {\n\n    const repeat = (template, dataArr) => {\n        return dataArr.map(item => template(item)).join('')\n    }\n\n    const userTpl = (user) => /*html*/ \\`\n        <app-user data-props=\"{'userId': '\\${user.id}'}\"></app-user>\n    \\`\n    \n    return /*html*/ \\`\n        <div class=\"user-list-wrapper\">\n            \\${repeat(userTpl, state.userList)}\n        </div>\n    \\`\n}                                \n`\n                            },\n                            {\n                                text:'Acima, no template, repeat espera receber um fragmento de template para repeti-lo com base em um array de dados. No trecho abaixo, o fragmento userTpl é passado como parametro para repeat jundo com a lista de usuários.',\n                                code: `\n    return /*html*/ \\`\n        <div class=\"user-list-wrapper\">\n            \\${repeat(userTpl, state.userList)}\n        </div>\n    \\`                                \n                                `\n                            },\n                            {\n                                text: 'Observe que userTpl contém o componente appUser que ainda não foi criado. Ainda nessa sessão vamos criá-lo.'\n                            },\n                            {\n                                text:'O próximo passo é criar os estilos do componente.',\n                                code: `\n/*appUserList.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-user-list .user-list-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n    }\n\\`\n\n                                `\n                            },\n                            {\n                                text: 'Com o template e estilos já definidos, é preciso definir o código do componente.',\n                                code: `\nimport template from './appUserList.template'\nimport styles from './appUserList.styles'\n\nimport { appUser } from '../appUser/appUser.component'\nimport { store } from '../../store'\n\nconst appUserList = () => {\n\n    const state = {\n        userList: store.get().userList\n    }\n\n    const children = () => ({\n        appUser\n    })\n\n    const hooks = ({ state, methods }) => ({\n        beforeOnInit() {\n            store.subscribe(({ search }) => {\n                const userList = search?.userList\n                const hasChanges = methods.hasChanges(state.get().userList, userList)\n                if (hasChanges && userList) state.set({userList})\n            })\n        }\n    })   \n    \n    const methods = ({props, state}) => ({\n        \n        hasChanges (oldState, newState) {\n            const oldStateJson = JSON.stringify(oldState)\n            const newStateJson = JSON.stringify(newState)\n            return oldStateJson !== newStateJson\n        },\n\n    })\n\n    return {\n        state,\n        template,\n        styles,\n        children,\n        hooks, \n        methods\n    }\n}\n\nexport { appUserList }                                \n                                `\n                            },\n                            {\n                                text:'Primeiro importamos as dependências do componente. Inclusive appUser que ainda não existe. Por isso, se você testar agora a aplcação ocorrerá um erro. Mas não se precupe logo iremos criá-lo.',\n                                code:`\nimport template from './appUserList.template'\nimport styles from './appUserList.styles'\n\nimport { appUser } from '../appUser/appUser.component'\nimport { store } from '../../store'                                \n                                `\n                            },\n                            {\n                                text:'Observe que dentro da factory appUser, definimos o state local do componente e registramos appUser como filho de appUserList.',\n                                code: `\nconst state = {\n    userList: store.get().userList\n}\n\nconst children = () => ({\n    appUser\n})                                \n                                `\n                            },\n                            {\n                                text: 'Na sequeência, através do hooks beforeOnInit o componente se inscreve para ouvir mudanças na store através do método subscribe da própria store.',\n                                code: `\nconst hooks = ({ state, methods }) => ({\n    beforeOnInit() {\n        store.subscribe(({ search }) => {\n            const userList = search?.userList\n            const hasChanges = methods.hasChanges(state.get().userList, userList)\n            if (hasChanges && userList) state.set({userList})\n        })\n    }\n})                                 \n                                `\n                            },\n                            {\n                                text: 'O código acima garante que o componente será atualizado somente quando o state local for diferente da store.'\n                            },\n                            {\n                                text:'A comparação entre estado local e store só é possíve, por causa da factoryMethods que devolve um objeto contendo os métodos do componete. Esse objeto foi acessado no hook beforeOnInit. Veja abaixo:',\n                                code: `\nconst methods = ({props, state}) => ({\n    \n    hasChanges (oldState, newState) {\n        const oldStateJson = JSON.stringify(oldState)\n        const newStateJson = JSON.stringify(newState)\n        return oldStateJson !== newStateJson\n    },\n\n})                                \n                                `\n                            },\n                            {\n                                text:'O componente appUserList está concluído. Mas, ainda é ncessário criar o componente appUser registrado como filho de appUserList, caso contrário a aplicação vai quebrar.'\n                            },\n                            {\n                                text:'A partir de agora, implementaremos o componente appUser.'\n                            },\n                            {\n                                text:'Na pasta components crie a pasta appUser e dentro dela os arquivos:',\n                                code:`\nappUser.component.js\nappUser.template.js\nappUser.styles.js                                \n                                `\n                            },\n                            {\n                                text:'Comece implementando o template:',\n                                code:`\n*appUser.template.js*/\n\nexport default ({props, state, methods}) => {\n\n    const userId = props.object.userId\n\n    const notHaveButtons = () => props.object.hideButtons && props.object.hideButtons === true\n    \n    const buttonsTpl = () => {\n        if (notHaveButtons()) return ''\n        return /*html*/ \\`\n            <div class=\"user-buttons\">\n                <app-link data-props=\"{'hash': '#/user/\\${props.object.userId}', 'label':'Histórico'}\"></app-link>\n                <app-mark-to data-props=\"{'type':'user', 'userId': '\\${userId}'}\"></app-mark-top>\n            </div>        \n        \\`\n    }\n    \n    return /*html*/ \\`\n    <div class=\"user-wrapper \\${methods.isSelected(userId) && !notHaveButtons() ? 'selected' : ''}\">\n        <div class=\"user-name\"> \\${methods.getFullName(userId)}</div>\n        <div class=\"user-cpf\">CPF: \\${state.cpf}</div>\n        \\${buttonsTpl()}\n    </div>\\`\n}\n                                `\n                            },\n                            {\n                                text:'No trecho abaixo, o template obtem o id do cliente/usuário e define uma função que verifica se deve ou não exibir botões de controle.',\n                                code: `\nconst userId = props.object.userId\nconst notHaveButtons = () => props.object.hideButtons && props.object.hideButtons === true                                \n                                `\n                            }, \n                            {\n                                text:'Na sequência é definido o fragmento de template que adiciona os botões de controle de acordo com a funçao de verificação definida anteriormente.',\n                                code: `\n    const buttonsTpl = () => {\n        if (notHaveButtons()) return ''\n        return /*html*/ \\`\n            <div class=\"user-buttons\">\n                <app-link data-props=\"{'hash': '#/user/\\${props.object.userId}', 'label':'Histórico'}\"></app-link>\n                <app-mark-to data-props=\"{'type':'user', 'userId': '\\${userId}'}\"></app-mark-top>\n            </div>        \n        \\`\n    }                                \n                                `\n                            },\n                            {\n                                text:'No trecho acima, buttonsTpl faz uso de um componente extra \"appLink\" que deve redirecionar para uma rota contendo o id do usuário se for clicado.'\n                            },\n                            {\n                                text:'Por fim, como pode ver abaixo, o template exibe os dados do do usuário/cliente e verifica se o mesmo está marcado para uma operação de locação. Caso esteja, o template do usuário/cliente é destaco.',\n                                code: `\n    return /*html*/ \\`\n    <div class=\"user-wrapper \\${methods.isSelected(userId) && !notHaveButtons() ? 'selected' : ''}\">\n        <div class=\"user-name\"> \\${methods.getFullName(userId)}</div>\n        <div class=\"user-cpf\">CPF: \\${state.cpf}</div>\n        \\${buttonsTpl()}\n    </div>\\`                                \n                                `\n                            },\n                            {\n                                text:'O próximo passo agora é implementar os estilos do componente.',\n                                code: `\n/*appUser.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-user .user-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n        margin-bottom:15px;\n        border-radius:4px;\n        border:1px #f7f6f8 solid;\n        background:#fff;\n        box-shadow: 3px 3px 3px #f4f3f6;\n        text-align:left;\n    }\n\n    app-user .selected {border-color:#2ad58e}\n\n    app-user .user-name,\n    app-user .user-cpf {\n        display:block;\n        float:left;\n        width:100%;\n        padding-bottom: 15px;\n        border-bottom:1px #ebebeb solid;\n        margin-bottom:15px;\n    }\n\n    app-user .user-name {\n        font-weight:700;\n        margin-bottom:0;\n        border-bottom:none;\n    }\n    \n    app-user .user-name,\n    app-user .user-cpf {\n        display:block;\n        float:left;\n        width:100%;\n        padding-bottom: 15px;\n        border-bottom:1px #ebebeb solid;\n        color:#666;\n        font-size:1em;\n        text-transform:uppercase;\n        line-height:1.5em;\n    }\n\n    app-user .user-cpf {\n        text-transform: none;\n        padding-top:15px;\n    }    \n\n    app-user .user-buttons {\n        display:block;\n        float:left;\n        width:100%;\n        text-align:right;\n    }\n\n\\`\n\n                                `\n                            },\n                            {\n                                text:'Por fim, você deve implementar o código abaixo para o componente:',\n                                code: `\nimport styles from './appUser.styles'\nimport template from './appUser..template'\n\nimport { appLink } from '../appLink/appLink.component'\nimport { appMarkTo } from '../appMarkTo/appMarkTo.component'\n\nimport { store } from '../../store'\n\nconst appUser = () => {\n\n    const state = {\n        cpf:'',\n        fullName:'',\n        selected: false,\n        userList: store.get().userList,\n    }\n\n    const children = () => ({\n        appLink,\n        appMarkTo\n    })\n\n    const hooks = ({methods}) => ({\n\n        beforeOnInit () {\n            store.subscribe((payload) => {\n                methods.userInOperation(payload) ? methods.selectUser() : methods.unselectUser()\n            })\n        },\n\n        afterOnInit () {\n            \n            methods.setCpf()\n        }\n\n    })\n\n    const methods = ({props, state}) => ({\n        \n        setCpf () {\n            const {userId} = props.get().object\n            const {userList} = state.get()\n            const {cpf} = userList.find( user => +user.id === +userId)\n            state.set({cpf})\n        },\n\n        getFullName (userId) {\n            const { userList } = state.get()\n            const user = userList.find( user => +user.id === +userId)\n            return \\`\\${ user.name } \\${ user.lastName }\\`\n        },\n\n        isSelected (userId) {\n            const { operation } = store.get()\n            return (operation.client !== null && +operation.client.id === +userId)\n        },\n\n        selectUser () {\n            state.set({selected: true})\n        },\n        unselectUser () {\n            state.set({ selected: false })\n        },\n\n        userInOperation(dataStore) {\n            const { operation } = dataStore\n            const { object } = props.get()\n            return operation.client !== null && +operation.client.id === +object.userId\n        }\n\n    })\n\n    return {\n        state,\n        template,\n        styles,\n        children,\n        hooks,\n        methods\n    }\n}\n\nexport { appUser }                                \n                                `\n                            },\n                            {\n                                text:'Primeiro, foram importadas as dependências do componente. Inclusive, appLink que ainda não foi criado. Faremos isso logo a seguir.',\n                                code: `\nimport styles from './appUser.styles'\nimport template from './appUser..template'\n\nimport { appLink } from '../appLink/appLink.component'\nimport { appMarkTo } from '../appMarkTo/appMarkTo.component'\n\nimport { store } from '../../store'                                \n                                `\n                            },\n                            {\n                                text:'No trecho de código abaixo, o state local foi declarado e os componentes filhos registrados.',\n                                code:`\n    const state = {\n        cpf:'',\n        fullName:'',\n        selected: false,\n        userList: store.get().userList,\n    }\n\n    const children = () => ({\n        appLink,\n        appMarkTo\n    })                                \n                                `\n                            },\n                            {\n                                text: 'Esse componente faz uso de dois hooks.'\n                            },\n                            {\n                                text:'Primeiro, beforeOnInit para observar mudanças na store de dados.'\n                            },\n                            {\n                                text:'O segundo hooks utilizado foi afterOnInit. Assim, logo que o componente é inicializado o cpf do cliente é definido no state local através da execução do método setCpf.',\n                                code: `\n    const hooks = ({methods}) => ({\n\n        beforeOnInit () {\n            store.subscribe((payload) => {\n                methods.userInOperation(payload) ? methods.selectUser() : methods.unselectUser()\n            })\n        },\n\n        afterOnInit () {\n            \n            methods.setCpf()\n        }\n\n    })                                \n                                `\n                            },\n                            {\n                                text:'Então, os métodos usados no template e nos hooks são declarados.',\n                                code:`\n    const methods = ({props, state}) => ({\n        \n        setCpf () {\n            const {userId} = props.get().object\n            const {userList} = state.get()\n            const {cpf} = userList.find( user => +user.id === +userId)\n            state.set({cpf})\n        },\n\n        getFullName (userId) {\n            const { userList } = state.get()\n            const user = userList.find( user => +user.id === +userId)\n            return \\`\\${ user.name } \\${ user.lastName }\\`\n        },\n\n        isSelected (userId) {\n            const { operation } = store.get()\n            return (operation.client !== null && +operation.client.id === +userId)\n        },\n\n        selectUser () {\n            state.set({selected: true})\n        },\n\n        unselectUser () {\n            state.set({ selected: false })\n        },\n\n        userInOperation(dataStore) {\n            const { operation } = dataStore\n            const { object } = props.get()\n            return operation.client !== null && +operation.client.id === +object.userId\n        }\n\n    })                                \n                                `\n                            },\n                            {\n                                text:'Como esse componente depende de appLink e appLink ainda não foi criado, faremos isso agora.',\n                            },\n                            {\n                                text:'Crie uma pasta appLink dentro da pasta componentes e dentro da pasta os três arquivos abaixo:',\n                                code:`\nappLink.component.js\nappLink.template.js\nappLink.styles.js                                \n                                `\n                            },\n                            {\n                                text:'App link é um componente muito simples. Tudo que ele faz é exibir um texto no botão e redirecinar para a rota passada através de suas propriedades reativas. Veja abaixo:',\n                                code:`\n/*appLink.template.js*/\n\nexport default ({ props, state }) => /*html*/ \\`\n    <div class=\"link-wrapper\">\n        <a href=\"\\${props.object.hash}\" class=\"link\">\n            <i class=\"las la-plus\"></i> \\${props.object.label}\n        </a>    \n    </div>\n\\`                                \n                                `\n                            },\n                            {\n                                text:'O css desse componente também é bem simples:',\n                                code:`\n/*appLink.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-link .link-wrapper {\n        display:inline-block;\n    }\n\n    app-link .selected {border-color:#2ad58e}    \n    \n    app-link .link {\n        display:block;\n        float:left;\n        width:100%;\n        padding:10px 15px;\n        border-radius:4px;\n        font-size: .875em;\n        text-align:center;\n        border:1px #fff solid;\n        color:#d2cad8;\n        background:#f7f7f8;\n        text-decoration:none;\n        outline:none;\n        transition:.2s ease-in\n    }\n\n    app-link .link:hover {\n        border:1px #2ad58e solid;\n        color:#2ad58e;\n        background:#fff;\n    }\n\\`\n                                `\n                            },\n                            {\n                                text:'O css utilizado poderia ser usado para formatar o comportamento visual de qualquer botão html.'\n                            },\n                            {\n                                text:'Por fim, a implementação do componente.',\n                                code:`\n/*appLink.componente.js*/\n\nimport template from './appLink.template'\nimport styles from './appLink.styles'\n\nconst appLink = () => {\n\n    return {\n        template,\n        styles\n    }\n\n}\n\nexport { appLink }\n                                `\n                            },\n                            {\n                                text:'Veja que o componente só junta tudo em uma peça e é exportado para ser reusado quantas vezes necessarias.'\n                            },\n                            {\n                                text:'Como o componente que acabou de ser criado já foi previamente importado por appUser. Não há mais o que fazer. Então vai lá, pode testar a aplicação.'\n                            }\n                        ]\n                    },\n                    {\n                        title:'Gerenciando operações de locação.',\n                        paragraphs:[\n                            {\n                                text:'Na sessão anterior concluímos os componentes para exibição dos filmes e clientes registrados na aplicação. Porém, as operações de locação ainda não estão sendo administradas. Faremos isso agora.'\n                            },\n                            {\n                                text:'Para gerenciar as operações de locação, será necessário criar um componente novo e reutilizar appUser e appMovie. Some uma operação pode ser realizada por vez e somente um filme e um cliente pode ser registrado para cada operação.'\n                            },\n                            {\n                                text:'Na pasta componentes crie a pasta appSidebar e dentro dela os arquivos:',\n                                code:`\nappSidebar.component.js\nappSidebar.template.js\nappSidebar.styles.js                                \n                                `\n                            },\n                            {\n                                text:'Para facilitar o entendimento, dessa vez comece implementando o compontent:',\n                                code: `\n/*appSidebar.component.js*/\n\nimport template from './appSidebar.template'\nimport styles from './appSidebar.styles'\n\nimport { appUser } from '../appUser/appUser.component'\nimport { appMovie } from '../appMovie/appMovie.component'\nimport { store } from '../../store'\n\nconst appSidebar = () => {\n\n    const state = {\n        client: null,\n        movie: null,\n        showSidebar: false\n    }\n\n    const children = () => ({\n        appUser,\n        appMovie\n    })\n\n    const hooks = ({state, methods}) => ({\n        beforeOnInit () {\n            store.subscribe((dataStore) => {\n                const { client, movie } = dataStore.operation\n                let showSidebar = methods.hasClientAndMovie()\n                state.set({client, movie, showSidebar})\n            })\n        }\n    })\n\n    const events = ({query, on, methods}) => ({\n        onClickToCancel () {\n            const btnCancel = query('.btn-cancel')\n            if(!btnCancel) return\n            on('click', [btnCancel], methods.clearOperation)\n        },\n\n        onClickToConfirm () {\n            const btnSuccess = query('.btn-success')\n            if(!btnSuccess) return\n            on('click', [btnSuccess], methods.saveOperation)\n        }\n    })\n\n    const methods = ({props, state}) => ({\n\n        clearOperation () {\n            store.update((dataStore) => {\n                dataStore.operation = {client:null, movie:null}\n            })\n        },\n\n        saveOperation () {\n            store.update((dataStore) => {\n                const {movie, client} = state.get()\n                const user = dataStore.userList.find( user => +user.id === +client.id)\n                user.movies.push(movie)\n                dataStore.operation = { client: null, movie: null }\n            })\n        },\n    \n        hasClientAndMovie () {\n            const { operation } = store.get()\n            return (operation.client && operation.movie) !== null\n        }\n\n    })\n    return {\n        state,\n        methods,\n        children,\n        hooks,\n        events,\n        template,\n        styles\n    }\n}\n\nexport { appSidebar }\n                                `\n                            },\n                            {\n                                text:'No trecho abaixo foram importadas as dependẽncias do componente, inclusive appUser e appMovie que serão reutilizados.',\n                                code: `\nimport template from './appSidebar.template'\nimport styles from './appSidebar.styles'\n\nimport { appUser } from '../appUser/appUser.component'\nimport { appMovie } from '../appMovie/appMovie.component'\nimport { store } from '../../store'                                \n                                `\n                            },\n                            {\n                                text:'Observe que em seguida o state local foi definido e os componentes filhos de appSidebar foram registrados:',\n                                code:`\n    const state = {\n        client: null,\n        movie: null,\n        showSidebar: false\n    }\n\n    const children = () => ({\n        appUser,\n        appMovie\n    })                                \n                                `\n                            },\n                            {\n                                text:'Nesse outro trecho, o hook beforeOnInit é declarado. O componente se increve para ouvir mudanças nos dados da store. Caso ocorra uma mudança nos dados o componente verifica se existe cliente e filme marcados para uma operação de locação, decide se o sidebar deve ser exibido e atualiza o state local do componente.',\n                                code:`\n    const hooks = ({state, methods}) => ({\n        beforeOnInit () {\n            store.subscribe((dataStore) => {\n                const { client, movie } = dataStore.operation\n                let showSidebar = methods.hasClientAndMovie()\n                state.set({client, movie, showSidebar})\n            })\n        }\n    })                                \n                                `\n                            },\n                            {\n                                text:'Note que o operado do app precisa de uma forma para poder cancelar e salvar locações. O trecho abaixo adiciona dois eventos que permitem essa interação.',\n                                code:`\n    const events = ({query, on, methods}) => ({\n        onClickToCancel () {\n            const btnCancel = query('.btn-cancel')\n            if(!btnCancel) return\n            on('click', [btnCancel], methods.clearOperation)\n        },\n\n        onClickToConfirm () {\n            const btnSuccess = query('.btn-success')\n            if(!btnSuccess) return\n            on('click', [btnSuccess], methods.saveOperation)\n        }\n    })                                \n                                `\n                            },\n                            {\n                                text:'O manipulador de eventos onClicToCacel, registra um evento de click no botão cancelar e caso esse botão sejá clicada a operação de locação será removida pelo método clearOperation.'\n                            },\n                            {\n                                text:'No caso do manipulador onClickToConfirm, é registrado um evento de click e caso o botão de confirmação seja clicado o método save operation adiconará um filme na lista de filmes locados do cliente através do método saveOperation.',\n                            },\n                            {\n                                text:'Por fim, os métodos usados nos hooks, eventos e template são declarados.',\n                                code: `\nconst methods = ({props, state}) => ({\n\n        clearOperation () {\n            store.update((dataStore) => {\n                dataStore.operation = {client:null, movie:null}\n            })\n        },\n\n        saveOperation () {\n            store.update((dataStore) => {\n                const {movie, client} = state.get()\n                const user = dataStore.userList.find( user => +user.id === +client.id)\n                user.movies.push(movie)\n                dataStore.operation = { client: null, movie: null }\n            })\n        },\n    \n        hasClientAndMovie () {\n            const { operation } = store.get()\n            return (operation.client && operation.movie) !== null\n        }\n\n    })\n                                    \n                                `\n                            },\n                            {\n                                text:'Existem dois pontos importantíssimos que precisam de mais detalhes. O primeiro é o cancelamento de operações de locação. Veja abaixo:',\n                                code:`\n        clearOperation () {\n            store.update((dataStore) => {\n                dataStore.operation = {client:null, movie:null}\n            })\n        }                                \n                                `\n                            },\n                            {\n                                text:'Esse trecho de código define indiscriminadamente as propriedades client e movie da chave operation da store como nulas. Isso garante que a operação está cancelada.'\n                            },\n                            {\n                                text:'Outro ponto importante trata da confirmação da operação. Veja a seguir:',\n                                code:`\n        saveOperation () {\n            store.update((dataStore) => {\n                const {movie, client} = state.get()\n                const user = dataStore.userList.find( user => +user.id === +client.id)\n                user.movies.push(movie)\n                dataStore.operation = { client: null, movie: null }\n            })\n        }                                \n                                `\n                            },\n                            {\n                                text:'Nesse trecho de código, a função saveOperation obtem os dados de clientes e filmes extraíndo-os do state local. Em seguida, a função procura pelo usuário/cliente selecionado e o salva na variável user. Por fim, o filme extraído do state local é inserido na propriedade movies do usuário/cliente selecionado e a operação então é definida como nula o que possíbilita uma nova operação de locação no futuro.'\n                            },\n                            {\n                                text: 'Por fim, o componente é exportado',\n                                code: `\n/*codigo omitido*/\n\nconst appSidebar = () => {\n    /*codigo omitido*/\n}\n\nexport { appSidebar }\n                        `\n                            },\n                            {\n                                text:'Agora será necesário importar o componente appSidebar em appHome e a aparência de appHome ficará assim:',\n                                code:`\n/*appHome.component.js*/\n\nimport template from './appHome.template'\nimport styles from './appHome.styles'\n\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appMovieList } from '../appMovieList/appMovieList.component'\nimport { appUserList } from '../appUserList/appUserList.component'\nimport { appSearch } from '../appSearch/appSearch.component'\nimport { appSidebar } from '../appSidebar/appSidebar.component'\n\nimport { store } from '../../store'\n\nconst appHome = () => {\n\n    const children = () => ({\n        appTitle,\n        appMovieList,\n        appUserList,\n        appSearch,\n        appSidebar\n    })\n\n    return {\n        template,\n        styles,\n        children,\n    }\n    \n}\n\nexport { appHome }\n                                `\n                            }                           \n                        ]\n                    }\n                ]\n            },\n            {\n                title:'Histórico de filmes locados.',\n                tagline:'Muito mais produtividade com muito menos complexidade',\n                articles:[\n                    {\n                        title:'Detalhes do usuário',\n                        paragraphs:[\n                            {\n                                text:'Para concluir a aplicação será necessário criar um último componente que exiba os filmes locados por cada usuário/cliente.'\n                            },\n                            {\n                                text:'Dentro da pasta components, crie a pasta appUserDetail e dentro dela os arquivos abaixo:',\n                                code:`\nappUserDetail.component.js                                \nappUserDetail.template.js                                \nappUserDetail.styles.js                                \n                                `\n                            },\n                            {\n                                text:'Comece implementando o compoente:',\n                                code:`\nimport template from './appUserDetail.template'\nimport styles from './appUserDetail.styles'\n\nimport { store } from '../../store'\nimport { appUser } from '../appUser/appUser.component'\nimport { appMovie } from '../appMovie/appMovie.component'\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appLink } from '../appLink/appLink.component'\n\nconst appUserDetail = () => {\n\n    const state = {\n        user: null\n    }\n    \n    const children = () => ({ \n        appMovie,\n        appTitle,\n        appLink,\n        appUser\n    })\n\n    const hooks = ({methods}) => ({\n       \n        beforeOnInit () {\n            methods.getUserById()\n        }\n\n    })\n\n    const methods = ({props, state}) => ({\n\n        getHashId () {\n            return +window.location.hash.split('/').pop()\n        },\n\n        getUserById () {\n            const userId = this.getHashId()\n            const user = store.get().userList.find( user => user.id === userId)\n            state.set({ user })\n        }\n\n    })\n\n    return {\n        template,\n        styles,\n        methods,\n        hooks,\n        children\n    }\n\n}\n\nexport { appUserDetail }                                \n                                `\n                            },\n                            {\n                                text:'No trecho abaixo, todas as dependências do componente são importadas.',\n                                code:`\nimport template from './appUserDetail.template'\nimport styles from './appUserDetail.styles'\n\nimport { store } from '../../store'\nimport { appUser } from '../appUser/appUser.component'\nimport { appMovie } from '../appMovie/appMovie.component'\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appLink } from '../appLink/appLink.component'                                \n                                `\n                            },\n                            {\n                                text:'Observe que o componente appUserDetail reaproveita appUser, appMovie, appTitle para exibir as informações necessárias.'\n                            },\n                            {\n                                text:'appUserDetail também permitirá a navegação entre as páginas através do componente appLink.'\n                            },\n                            {\n                                text:'No trecho a seguir, o state local é declarado e os componentes filhos registrados.',\n                                code:`\n    const state = {\n        user: null\n    }\n    \n    const children = () => ({ \n        appMovie,\n        appTitle,\n        appLink,\n        appUser\n    })                                \n                                `\n                            },\n                            {\n                                text:'Na sequência o componente registra o hook beforeOnInit para obter o id do usuário selecionado para então exibir suas informações na tela.',\n                                code:`\n    const hooks = ({methods}) => ({\n       \n        beforeOnInit () {\n            methods.getUserById()\n        }\n\n    })                                \n                                `\n                            },\n                            {\n                                text:'Observe que appUserDetail registra duas funções apenas. A primeira é getHashId que obtém o id do usuário/cliente através do hash na url da página e a segunda é getUserById que recupera o usuário na store de dados através do id de usuário obtido por getHashId.',\n                                code:`\n    const methods = ({props, state}) => ({\n\n        getHashId () {\n            return +window.location.hash.split('/').pop()\n        },\n\n        getUserById () {\n            const userId = this.getHashId()\n            const user = store.get().userList.find( user => user.id === userId)\n            state.set({ user })\n        }\n\n    })                                \n                                `\n                            },\n                            {\n                                text:'Por fim, a função fabrica retorna as propriedades do compoenente e é exportada:',\n                                code:`\n/*codigo omitido*/\n\nconst appUserDetail = () => {\n    \n    /*codigo omitido*/\n\n    return {\n        template,\n        styles,\n        methods,\n        hooks,\n        children\n    }\n\n}\n\nexport { appUserDetail }                                \n                                `\n                            },\n                            {\n                                text:'Hora de definir o template do componente:',\n                                code: `\n/*appUserDetail.template.js*/\n\nexport default ({props, state}) => {\n    const repeat = (template, dataArr) => {\n        return dataArr.map(item => template(item)).join('')\n    }\n\n    const movieTpl = (movie) => /*html*/ \\`\n        <div class=\"grid\">\n            <app-movie data-props=\"{'movieId': '\\${movie.id}', 'hideButtons':true}\"></app-movie>\n        </div>\n    \\`   \n\n    return /*html*/ \\`\n        <div class=\"detail-wrapper\">\n        <app-title data-props=\"{'title':'Hitórico de locações', 'style':'purple'}\"></app-title>\n            <div class=\"content\">\n                <div class=\"row\">\n                    <app-link data-props=\"{'hash': '#/', 'label':'Voltar'}\"></app-link>\n                </div>\n                <div class=\"row\">\n                    <app-title data-props=\"{'title':'Dados do cliente', 'style':'white'}\"></app-title>\n                </div>\n                <div class=\"row\">\n                    <app-user data-props=\"{'userId': '\\${state.user.id}', 'hideButtons':true}\"></app-user>\n                </div>\n                <div class=\"row\">\n                    <app-title data-props=\"{'title':'Histórico de locação', 'style':'white'}\"></app-title>\n                </div>\n                \\${repeat(movieTpl, state.user.movies)}    \n            </div>\n        </div>\n    \\`\n\n}\n                                `\n                            },\n                            {\n                                text:'No trecho abaixo, é definido o fragmento de template movieTpl que faz uso do componente appMovie e que será repetido de acordo com a lista de filmes alugada pelo usuário/clente. Isso só é possível porque appMovie recebe atraves da propriedade reativa movieId o id do filme a ser listado.',\n                                code:`\n    const movieTpl = (movie) => /*html*/ \\`\n        <div class=”grid”>\n            <app-movie data-props=”{'movieId': '$\\{movie.id}', 'hideButtons':true}”></app-movie>\n        </div>\n    \\`                                 \n                                `\n                            },\n                            {\n                                text:'Por fim, todos os componentes filhos utilizados pelo template recebem através de propriedades reativas as informações das quais dependem. Inclusive, appUser que exibe os dados do usuário, também faz uso desse recurso.',\n                                code:`\n    return /*html*/ \\`\n        <div class=\"detail-wrapper\">\n        <app-title data-props=\"{'title':'Hitórico de locações', 'style':'purple'}\"></app-title>\n            <div class=\"content\">\n                <div class=\"row\">\n                    <app-link data-props=\"{'hash': '#/', 'label':'Voltar'}\"></app-link>\n                </div>\n                <div class=\"row\">\n                    <app-title data-props=\"{'title':'Dados do cliente', 'style':'white'}\"></app-title>\n                </div>\n                <div class=\"row\">\n                    <app-user data-props=\"{'userId': '\\${state.user.id}', 'hideButtons':true}\"></app-user>\n                </div>\n                <div class=\"row\">\n                    <app-title data-props=\"{'title':'Histórico de locação', 'style':'white'}\"></app-title>\n                </div>\n                \\${repeat(movieTpl, state.user.movies)}    \n            </div>\n        </div>\n    \\`                                \n                                `\n                            },\n                            {\n                                text:'Hora de implementar os estilos do componente.',\n                                code:`\n/*appUserDetail.styles.js*/\n\nexport default () => /*css*/ \\`\n    app-user-detail .detail-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n    }\n\n    app-user-detail .content {\n        display:block;\n        width:100%;\n        max-width:1180px;\n        margin:0 auto;\n    }\n\n    app-user-detail .grid {\n        display:block;\n        float:left;\n        width:33.333%;\n        padding:15px 15px 0 15px;\n    }\n\n    app-user-detail .row {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px;\n        text-align:right;\n    }\n\n\\`                                \n                                `\n                            },\n                            {\n                                text:'CSS aplicado! Temos concluído o componente appUserDetail. Mas, ainda resta importá-lo nas rotas de navegação para que tudo funcione corretamente.',\n                                code:`\n/*main.js*/\n\n/*codigo omitido*/\n\nimport { appUserDetail } from './components/appUserDetail/appUserDetail.component'\n\n/*codigo omitido*/\n\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#\\/$/, component: appHome },\n        { hashExp: /^\\#\\/user\\/\\d+$/, component: appUserDetail },\n    ]\n}\n\n/*codigo omitido*/\n                                `\n                            },\n                            {\n                                text:'Finalmente conluímos a aplicação. Pode ir lá testar!'\n                            }\n                        ]\n                    },\n                ]\n            },\n            {\n                title:'Conclusão',\n                tagline:'Padrões e reatividade com factory functions',\n                articles:[\n                    {\n                        title:'Conceitos abordados',\n                        paragraphs:[\n                            {\n                                text:'Até aqui você já aprendeu os principais conceitos e recursos de r9x. Você já viu como é rápido construir aplicações com r9x. Tudo que precisa fazer agora é seguir praticando. Boa sorte!'\n                            }\n                        ]\n                    }\n                ]\n            }            \n        ]\n    }\n})\n\nexport { store }","export default ({props, state}) => {\n    \n\n    const bigTitle = () => /*html*/ `\n    <div class=\"title-wrapper\">\n        <h2 class=\"title\">${props.object.title}</h2>\n    </div>\n    `\n\n    const miniTitle = () => /*html*/ `\n    <div class=\"title-wrapper\">\n        <h3 class=\"sub-title\">${props.object.title}</h3>\n    </div>\n    `\n\n    const superTitle = () => /*html*/ `\n    <div class=\"title-wrapper\">\n        <h1 class=\"super-title\">${props.object.title}</h1>\n    </div>\n    `\n\n    if(props.object.type && props.object.type === 'mini') return miniTitle()\n    if(props.object.type && props.object.type === 'big') return bigTitle()\n    if(!props.object.type || props.object.type === 'super') return superTitle()\n}","export default () => /*css*/ `\n    app-title .title-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px 0;\n        margin:30px 0;\n        border-bottom:1px #d9dce1 solid;\n    }\n\n    app-title .sub-title {\n        font-size: 1.2rem;\n        font-weight:700;\n    }\n    \n    app-title .title {\n        font-size: 2rem;\n        font-weight:700;\n    }\n    \n    app-title .super-title {\n        font-size: 2.5rem;\n        font-weight:700;\n    }\n\n    app-title h1,\n    app-title h2,\n    app-title h3 {\n        color: #667185;\n    }\n\n`","import template from './appTitle.template'\nimport styles from './appTitle.styles'\n\nconst appTitle = () => {\n\n    const tagName = 'app-title'\n\n    return {\n        tagName,\n        template,\n        styles  \n    }\n\n}\n\nexport { appTitle }","export default ({ props, state, methods }) => {\n    \n    const { section } = props.object\n    const { sections } = state[section]\n\n    const tpl = sections.map((section) => {\n\n        let sectionTitle = ''\n        let sectionTagline = ''\n        let sectionArticles = ''\n\n        section.title ?\n            sectionTitle = /*html*/ `<app-title data-props=\"{'title':'${section.title}', 'type':'big'}\"></app-title>` :\n            sectionTitle = ''\n\n        section.tagline ?\n            sectionTagline = /*html*/ `<p class=\"tagline\">${section.tagline}</p>` :\n            sectionTagline = ''\n\n        section.articles && section.articles.length ?\n            sectionArticles = section.articles.map((article) => {\n                let articleTitle, articleParagraphs = ''\n\n                article.title ? articleTitle = /*html*/`<app-title data-props=\"{'title':'${article.title}', 'type':'mini'}\"></app-title>` : ''\n\n                articleParagraphs = article.paragraphs.map(paragraph => {\n                    let paragraphText, paragraphCode = ''\n                    paragraph.text && paragraph.text !== '' ? paragraphText = /*html*/ `<p class=\"paragraph\">${paragraph.text}</p>` : 'xxx'\n                    paragraph.code && paragraph.code !== '' ? paragraphCode = /*html*/ `<app-code data-text=\"${paragraph.code.replace(/[\"]/g, '&#148;')}\"></app-code>` : 'xxx'\n\n                    return `${paragraphText || ''} ${paragraphCode || ''}`\n                }).join('')\n\n                return `${articleTitle} ${articleParagraphs}`\n            }).join('') : ''\n\n        return `\n        ${sectionTitle} \n        ${sectionTagline}\n        ${sectionArticles}\n        `\n\n    }).join('');\n\n    return /*html*/`\n    <div class=\"view-wrapper\">\n        <div class=\"container\">\n        ${tpl}\n        </div>\n\n    </div>\n`\n}\n\n/*<app-title data-props=\"{'title':'Apresentação', 'type':'mini'}\"></app-title>\n<app-code data-text=\"${methods.htmlEncode(state.content)}\"></app-code>*/","export default () => /*css*/ `\n    app-view .view-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n        padding-bottom:45px;\n    }\n\n    app-view .container {\n        display:block;\n        width:100%;\n        max-width:1180px;\n        margin:0 auto;\n        padding-top:15px;\n    }\n\n    app-view .container::after {\n        content:'';\n        display:block;\n        width:100%;\n        clear:both;\n    }\n\n    app-view .tagline {\n        display: block;\n        float: left;\n        width: 100%;\n        padding: 15px;\n        margin: 15px 0;\n        border-radius: 4px;\n        font-size: .875em;\n        color: #667185;\n        background: #f9f9f9;\n        text-transform: uppercase;\n        font-weight: 900;\n    }\n\n    app-view .paragraph {\n        display:block;\n        float:left;\n        width:100%;\n        padding:15px 0;\n        line-height:1.5em;\n        font-size: 1.2em;\n        color:#667185;\n    }\n`","export default () => /*css*/ `\n    .content-wrapper {\n        display:block;\n        float:left;\n        width:100%;\n    }\n`","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n","// super simple module for the most common nodejs use case.\nexports.markdown = require(\"./markdown\");\nexports.parse = exports.markdown.toHTML;\n","\nimport { markdown } from 'markdown';\n\nexport default ({props, state, methods}) => { \n    \n    const getType = () => {\n        const text = props.text\n        const isHTML = /\\*html\\*/\n        const isCSS = /\\*css\\*/\n        const isJS = /\\.component\\./\n\n        if(isHTML.test(text)) return 'html'\n        if(isCSS.test(text)) return 'css'\n\n        return 'javascript'\n    }\n\n    return /*html*/ `\n    <div class=\"content-wrapper\">\n        <pre>\n            <code class=\"${getType()}\">${methods.htmlScape(props.text)}</code>\n        </pre>\n    </div>`\n}\n","// https://github.com/substack/deep-freeze/blob/master/index.js\n/** @param {any} obj */\nfunction deepFreeze(obj) {\n  Object.freeze(obj);\n\n  var objIsFunction = typeof obj === 'function';\n\n  Object.getOwnPropertyNames(obj).forEach(function(prop) {\n    if (Object.hasOwnProperty.call(obj, prop)\n    && obj[prop] !== null\n    && (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n    // IE11 fix: https://github.com/highlightjs/highlight.js/issues/2318\n    // TODO: remove in the future\n    && (objIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\n    && !Object.isFrozen(obj[prop])) {\n      deepFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n}\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n  }\n\n  ignoreMatch() {\n    this.ignore = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  var result = {};\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/* Stream merging */\n\n/**\n * @typedef Event\n * @property {'start'|'stop'} event\n * @property {number} offset\n * @property {Node} node\n */\n\n/**\n * @param {Node} node\n */\nfunction tag(node) {\n  return node.nodeName.toLowerCase();\n}\n\n/**\n * @param {Node} node\n */\nfunction nodeStream(node) {\n  /** @type Event[] */\n  var result = [];\n  (function _nodeStream(node, offset) {\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === 3) {\n        offset += child.nodeValue.length;\n      } else if (child.nodeType === 1) {\n        result.push({\n          event: 'start',\n          offset: offset,\n          node: child\n        });\n        offset = _nodeStream(child, offset);\n        // Prevent void elements from having an end tag that would actually\n        // double them in the output. There are more void elements in HTML\n        // but we list only those realistically expected in code display.\n        if (!tag(child).match(/br|hr|img|input/)) {\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: child\n          });\n        }\n      }\n    }\n    return offset;\n  })(node, 0);\n  return result;\n}\n\n/**\n * @param {any} original - the original stream\n * @param {any} highlighted - stream of the highlighted source\n * @param {string} value - the original source itself\n */\nfunction mergeStreams(original, highlighted, value) {\n  var processed = 0;\n  var result = '';\n  var nodeStack = [];\n\n  function selectStream() {\n    if (!original.length || !highlighted.length) {\n      return original.length ? original : highlighted;\n    }\n    if (original[0].offset !== highlighted[0].offset) {\n      return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n    }\n\n    /*\n    To avoid starting the stream just before it should stop the order is\n    ensured that original always starts first and closes last:\n\n    if (event1 == 'start' && event2 == 'start')\n      return original;\n    if (event1 == 'start' && event2 == 'stop')\n      return highlighted;\n    if (event1 == 'stop' && event2 == 'start')\n      return original;\n    if (event1 == 'stop' && event2 == 'stop')\n      return highlighted;\n\n    ... which is collapsed to:\n    */\n    return highlighted[0].event === 'start' ? original : highlighted;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function open(node) {\n    /** @param {Attr} attr */\n    function attr_str(attr) {\n      return ' ' + attr.nodeName + '=\"' + escapeHTML(attr.value) + '\"';\n    }\n    // @ts-ignore\n    result += '<' + tag(node) + [].map.call(node.attributes, attr_str).join('') + '>';\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function close(node) {\n    result += '</' + tag(node) + '>';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function render(event) {\n    (event.event === 'start' ? open : close)(event.node);\n  }\n\n  while (original.length || highlighted.length) {\n    var stream = selectStream();\n    result += escapeHTML(value.substring(processed, stream[0].offset));\n    processed = stream[0].offset;\n    if (stream === original) {\n      /*\n      On any opening or closing tag of the original markup we first close\n      the entire highlighted node stack, then render the original tag along\n      with all the following original tags at the same offset and then\n      reopen all the tags on the highlighted stack.\n      */\n      nodeStack.reverse().forEach(close);\n      do {\n        render(stream.splice(0, 1)[0]);\n        stream = selectStream();\n      } while (stream === original && stream.length && stream[0].offset === processed);\n      nodeStack.reverse().forEach(open);\n    } else {\n      if (stream[0].event === 'start') {\n        nodeStack.push(stream[0].node);\n      } else {\n        nodeStack.pop();\n      }\n      render(stream.splice(0, 1)[0]);\n    }\n  }\n  return result + escapeHTML(value.substr(processed));\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  escapeHTML: escapeHTML,\n  inherit: inherit,\n  nodeStream: nodeStream,\n  mergeStreams: mergeStreams\n});\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = node.kind;\n    if (!node.sublanguage) {\n      className = `${this.classPrefix}${className}`;\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\nfunction escape(value) {\n  return new RegExp(value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  var match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {string} separator\n * @returns {string}\n */\nfunction join(regexps, separator = \"|\") {\n  // backreferenceRe matches an open parenthesis or backreference. To avoid\n  // an incorrect parse, it additionally matches the following:\n  // - [...] elements, where the meaning of parentheses and escapes change\n  // - other escape sequences, so we do not misparse escape sequences as\n  //   interesting elements\n  // - non-matching or lookahead parentheses, which do not capture. These\n  //   follow the '(' with a '?'.\n  var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n  var numCaptures = 0;\n  var ret = '';\n  for (var i = 0; i < regexps.length; i++) {\n    numCaptures += 1;\n    var offset = numCaptures;\n    var re = source(regexps[i]);\n    if (i > 0) {\n      ret += separator;\n    }\n    ret += \"(\";\n    while (re.length > 0) {\n      var match = backreferenceRe.exec(re);\n      if (match == null) {\n        ret += re;\n        break;\n      }\n      ret += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        ret += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        ret += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    ret += \")\";\n  }\n  return ret;\n}\n\n// Common regexps\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit({\n    className: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  className: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  className: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  var mode = inherit(\n    {\n      className: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push(PHRASAL_WORDS_MODE);\n  mode.contains.push({\n    className: 'doctag',\n    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',\n    relevance: 0\n  });\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  className: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  className: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst CSS_NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE + '(' +\n    '%|em|ex|ch|rem' +\n    '|vw|vh|vmin|vmax' +\n    '|cm|mm|in|pt|pc|px' +\n    '|deg|grad|rad|turn' +\n    '|s|ms' +\n    '|Hz|kHz' +\n    '|dpi|dpcm|dppx' +\n    ')?',\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  className: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  className: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IDENT_RE: IDENT_RE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  NUMBER_RE: NUMBER_RE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  COMMENT: COMMENT,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  NUMBER_MODE: NUMBER_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  CSS_NUMBER_MODE: CSS_NUMBER_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n  METHOD_GUARD: METHOD_GUARD,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n// keywords that should have no default relevance value\nvar COMMON_KEYWORDS = 'of and for in not or if then'.split(' ');\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensativility of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(join(terminators), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex != 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      const result = m.exec(s);\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) { // wrap-around\n          this.regexIndex = 0;\n        }\n      }\n\n      // this.regexIndex = 0;\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminator_end) {\n      mm.addRule(mode.terminator_end, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  // TODO: We need negative look-behind support to do this properly\n  /**\n   * Skip a match if it has a preceding or trailing dot\n   *\n   * This is used for `beginKeywords` to prevent matching expressions such as\n   * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n   * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n   * @param {RegExpMatchArray} match\n   * @param {CallbackResponse} response\n   */\n  function skipIfhasPrecedingOrTrailingDot(match, response) {\n    const before = match.input[match.index - 1];\n    const after = match.input[match.index + match[0].length];\n    if (before === \".\" || after === \".\") {\n      response.ignoreMatch();\n    }\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.compiled) return cmode;\n    mode.compiled = true;\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    let kw_pattern = null;\n    if (typeof mode.keywords === \"object\") {\n      kw_pattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    // both are not allowed\n    if (mode.lexemes && kw_pattern) {\n      throw new Error(\"ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) \");\n    }\n\n    // `mode.lexemes` was the old standard before we added and now recommend\n    // using `keywords.$pattern` to pass the keyword pattern\n    cmode.keywordPatternRe = langRe(mode.lexemes || kw_pattern || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        // for languages with keywords that include non-word characters checking for\n        // a word boundary is not sufficient, so instead we check for a word boundary\n        // or whitespace - this does no harm in any case since our keyword engine\n        // doesn't allow spaces in keywords anyways and we still check for the boundary\n        // first\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?=\\\\b|\\\\s)';\n        mode.__beforeBegin = skipIfhasPrecedingOrTrailingDot;\n      }\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (mode.endSameAsBegin) mode.end = mode.begin;\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminator_end = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminator_end) {\n        cmode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(mode.illegal);\n    // eslint-disable-next-line no-undefined\n    if (mode.relevance === undefined) mode.relevance = 1;\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expand_or_clone_mode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expand_or_clone_mode(mode) {\n  if (mode.variants && !mode.cached_variants) {\n    mode.cached_variants = mode.variants.map(function(variant) {\n      return inherit(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cached_variants) {\n    return mode.cached_variants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\n/***********************************************\n  Keywords\n***********************************************/\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string>} rawKeywords\n * @param {boolean} case_insensitive\n */\nfunction compileKeywords(rawKeywords, case_insensitive) {\n  /** @type KeywordDict */\n  var compiled_keywords = {};\n\n  if (typeof rawKeywords === 'string') { // string\n    splitAndCompile('keyword', rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(className) {\n      splitAndCompile(className, rawKeywords[className]);\n    });\n  }\n  return compiled_keywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} className\n   * @param {string} keywordList\n   */\n  function splitAndCompile(className, keywordList) {\n    if (case_insensitive) {\n      keywordList = keywordList.toLowerCase();\n    }\n    keywordList.split(' ').forEach(function(keyword) {\n      var pair = keyword.split('|');\n      compiled_keywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\nvar version = \"10.2.0\";\n\n// @ts-nocheck\n\nfunction hasValueOrEmptyAttribute(value) {\n  return Boolean(value || value === \"\");\n}\n\nconst Component = {\n  props: [\"language\", \"code\", \"autodetect\"],\n  data: function() {\n    return {\n      detectedLanguage: \"\",\n      unknownLanguage: false\n    };\n  },\n  computed: {\n    className() {\n      if (this.unknownLanguage) return \"\";\n\n      return \"hljs \" + this.detectedLanguage;\n    },\n    highlighted() {\n      // no idea what language to use, return raw code\n      if (!this.autoDetect && !hljs.getLanguage(this.language)) {\n        console.warn(`The language \"${this.language}\" you specified could not be found.`);\n        this.unknownLanguage = true;\n        return escapeHTML(this.code);\n      }\n\n      let result;\n      if (this.autoDetect) {\n        result = hljs.highlightAuto(this.code);\n        this.detectedLanguage = result.language;\n      } else {\n        result = hljs.highlight(this.language, this.code, this.ignoreIllegals);\n        this.detectectLanguage = this.language;\n      }\n      return result.value;\n    },\n    autoDetect() {\n      return !this.language || hasValueOrEmptyAttribute(this.autodetect);\n    },\n    ignoreIllegals() {\n      return true;\n    }\n  },\n  // this avoids needing to use a whole Vue compilation pipeline just\n  // to build Highlight.js\n  render(createElement) {\n    return createElement(\"pre\", {}, [\n      createElement(\"code\", {\n        class: this.className,\n        domProps: { innerHTML: this.highlighted }})\n    ]);\n  }\n  // template: `<pre><code :class=\"className\" v-html=\"highlighted\"></code></pre>`\n};\n\nconst VuePlugin = {\n  install(Vue) {\n    Vue.component('highlightjs', Component);\n  }\n};\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\nconst escape$1 = escapeHTML;\nconst inherit$1 = inherit;\n\nconst { nodeStream: nodeStream$1, mergeStreams: mergeStreams$1 } = utils;\nconst NO_MATCH = Symbol(\"nomatch\");\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Convenience variables for build-in objects\n  /** @type {unknown[]} */\n  var ArrayProto = [];\n\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  var languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  var aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  var plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  var SAFE_MODE = true;\n  var fixMarkupRe = /(^(<[^>]+>|\\t|)+|\\n)/gm;\n  var LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  var options = {\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      var language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {Mode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignoreIllegals, continuation) {\n    /** @type {{ code: string, language: string, result?: any }} */\n    var context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    var result = context.result ?\n      context.result :\n      _highlight(context.language, context.code, ignoreIllegals, continuation);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n  */\n  function _highlight(languageName, code, ignoreIllegals, continuation) {\n    var codeToHighlight = code;\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {RegExpMatchArray} match - regexp match data\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, match) {\n      var matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(mode_buffer);\n        return;\n      }\n\n      let last_index = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(mode_buffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += mode_buffer.substring(last_index, match.index);\n        const data = keywordData(top, match);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          relevance += keywordRelevance;\n          emitter.addKeyword(match[0], kind);\n        } else {\n          buf += match[0];\n        }\n        last_index = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(mode_buffer);\n      }\n      buf += mode_buffer.substr(last_index);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (mode_buffer === \"\") return;\n      /** @type HighlightResult */\n      var result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(mode_buffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = result.top;\n      } else {\n        result = highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result.emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      mode_buffer = '';\n    }\n\n    /**\n     * @param {Mode} mode - new mode to start\n     */\n    function startNewMode(mode) {\n      if (mode.className) {\n        emitter.openNode(mode.className);\n      }\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.ignore) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Advance a single character\n     */\n    function advanceOne() {\n      mode_buffer += codeToHighlight[index];\n      index += 1;\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexs to potentially match here, so we move the cursor forward one\n        // space\n        mode_buffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      var lexeme = match[0];\n      var new_mode = match.rule;\n\n      const resp = new Response(new_mode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [new_mode.__beforeBegin, new_mode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.ignore) return doIgnore(lexeme);\n      }\n\n      if (new_mode && new_mode.endSameAsBegin) {\n        new_mode.endRe = escape(lexeme);\n      }\n\n      if (new_mode.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (new_mode.excludeBegin) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n          mode_buffer = lexeme;\n        }\n      }\n      startNewMode(new_mode);\n      // if (mode[\"after:begin\"]) {\n      //   let resp = new Response(mode);\n      //   mode[\"after:begin\"](match, resp);\n      // }\n      return new_mode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      var lexeme = match[0];\n      var matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      var end_mode = endOfMode(top, match, matchPlusRemainder);\n      if (!end_mode) { return NO_MATCH; }\n\n      var origin = top;\n      if (origin.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          mode_buffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== end_mode.parent);\n      if (end_mode.starts) {\n        if (end_mode.endSameAsBegin) {\n          end_mode.starts.endRe = end_mode.endRe;\n        }\n        startNewMode(end_mode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      var list = [];\n      for (var current = top; current !== language; current = current.parent) {\n        if (current.className) {\n          list.unshift(current.className);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    var lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceeding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      var lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      mode_buffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        mode_buffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error('0 width match regex');\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        var processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length;\n    }\n\n    var language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    var md = compileLanguage(language);\n    var result = '';\n    /** @type {CompiledMode} */\n    var top = continuation || md;\n    /** @type Record<string,Mode> */\n    var continuations = {}; // keep continuations for sub-languages\n    var emitter = new options.__emitter(options);\n    processContinuations();\n    var mode_buffer = '';\n    var relevance = 0;\n    var index = 0;\n    var iterations = 0;\n    var resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.lastIndex = index;\n          top.matcher.considerAll();\n        }\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        // if our failure to match was the result of a \"resumed scan\" then we\n        // need to advance one position and revert to full scanning before we\n        // decide there are truly no more matches at all to be had\n        if (!match && top.matcher.resumingScanAtSamePosition()) {\n          advanceOne();\n          continue;\n        }\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: languageName,\n        illegal: false,\n        emitter: emitter,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          illegal: true,\n          illegalBy: {\n            msg: err.message,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode\n          },\n          sofar: result,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          illegal: false,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter,\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      relevance: 0,\n      emitter: new options.__emitter(options),\n      value: escape$1(code),\n      illegal: false,\n      top: PLAINTEXT_LANGUAGE\n    };\n    result.emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = justTextHighlightResult(code);\n    var secondBest = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = _highlight(name, code, false);\n      current.language = name;\n      if (current.relevance > secondBest.relevance) {\n        secondBest = current;\n      }\n      if (current.relevance > result.relevance) {\n        secondBest = result;\n        result = current;\n      }\n    });\n    if (secondBest.language) {\n      // second_best (with underscore) is the expected API\n      result.second_best = secondBest;\n    }\n    return result;\n  }\n\n  /**\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n    @param {string} html\n    @returns {string}\n  */\n  function fixMarkup(html) {\n    if (!(options.tabReplace || options.useBR)) {\n      return html;\n    }\n\n    return html.replace(fixMarkupRe, match => {\n      if (match === '\\n') {\n        return options.useBR ? '<br>' : match;\n      } else if (options.tabReplace) {\n        return match.replace(/\\t/g, options.tabReplace);\n      }\n      return match;\n    });\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {string} prevClassName\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang;\n    var result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (!prevClassName.includes(language)) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code. Accepts a DOM node and\n   * two optional parameters for fixMarkup.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightBlock(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightBlock\",\n      { block: element, language: language });\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = element.innerHTML.replace(/\\n/g, '').replace(/<br[ /]*>/g, '\\n');\n    } else {\n      node = element;\n    }\n    const text = node.textContent;\n    const result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    const originalStream = nodeStream$1(node);\n    if (originalStream.length) {\n      const resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams$1(originalStream, nodeStream$1(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    fire(\"after:highlightBlock\", { block: element, result: result });\n\n    element.innerHTML = result.value;\n    element.className = buildClassName(element.className, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relavance: result.relevance\n    };\n    if (result.second_best) {\n      element.second_best = {\n        language: result.second_best.language,\n        // TODO: remove with version 11.0\n        re: result.second_best.relevance,\n        relavance: result.second_best.relevance\n      };\n    }\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {{}} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit$1(options, userOptions);\n  }\n\n  /**\n   * Highlights to all <pre><code> blocks on a page\n   *\n   * @type {Function & {called?: boolean}}\n   */\n  const initHighlighting = () => {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  };\n\n  // Higlights all when DOMContentLoaded fires\n  function initHighlightingOnLoad() {\n    // @ts-ignore\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    var lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n\n    @param {string} name - name of the language to fetch/require\n    @returns {Language | never}\n  */\n  function requireLanguage(name) {\n    var lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    var err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}', name));\n    throw err;\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    var cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /* fixMarkup is deprecated and will be removed entirely in v11 */\n  function deprecate_fixMarkup(arg) {\n    console.warn(\"fixMarkup is deprecated and will be removed entirely in v11.0\");\n    console.warn(\"Please see https://github.com/highlightjs/highlight.js/issues/2534\");\n\n    return fixMarkup(arg)\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    fixMarkup: deprecate_fixMarkup,\n    highlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    requireLanguage,\n    autoDetection,\n    inherit: inherit$1,\n    addPlugin,\n    // plugins for frameworks\n    vuePlugin: VuePlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexs into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\nfunction javascript(hljs) {\n  var IDENT_RE$1 = IDENT_RE;\n  var FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  var XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/\n  };\n  var KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.join(\" \"),\n    literal: LITERALS.join(\" \"),\n    built_in: BUILT_INS.join(\" \")\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)n?' },\n      { begin: '\\\\b(0[oO][0-7]+)n?' },\n      { begin: hljs.C_NUMBER_RE + 'n?' }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: []  // defined later\n  };\n  var HTML_TEMPLATE = {\n    begin: 'html`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml',\n    }\n  };\n  var CSS_TEMPLATE = {\n    begin: 'css`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css',\n    }\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    // eat recursive parens in sub expressions\n    { begin: /\\(/, end: /\\)/,\n      contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])\n    },\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    contains: PARAMS_CONTAINS\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    contains: [\n      hljs.SHEBANG({\n        binary: \"node\",\n        relevance: 5\n      }),\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [\n            {\n              className : 'doctag',\n              begin : '@[A-Za-z]+',\n              contains : [\n                {\n                  className: 'type',\n                  begin: '\\\\{',\n                  end: '\\\\}',\n                  relevance: 0\n                },\n                {\n                  className: 'variable',\n                  begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n                  endsParent: true,\n                  relevance: 0\n                },\n                // eat spaces (not newlines) so we can find\n                // types or variables\n                {\n                  begin: /(?=[^\\n])\\s/,\n                  relevance: 0\n                },\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: concat(/[{,\\n]\\s*/,\n          // we need to look ahead to make sure that we actually have an\n          // attribute coming up so we don't steal a comma from a potential\n          // \"value\" container\n          //\n          // NOTE: this might not work how you think.  We don't actually always\n          // enter this mode and stay.  Instead it might merely match `,\n          // <comments up next>` and then immediately end after the , because it\n          // fails to find any actual attrs. But this still does the job because\n          // it prevents the value contain rule from grabbing this instead and\n          // prevening this rule from firing when we actually DO have keys.\n          lookahead(concat(\n            // we also need to allow for multiple possible comments inbetween\n            // the first key:value pairing\n            /(((\\/\\/.*$)|(\\/\\*(.|\\n)*\\*\\/))\\s*)*/,\n            IDENT_RE$1 + '\\\\s*:'))),\n        relevance: 0,\n        contains: [\n          {\n            className: 'attr',\n            begin: IDENT_RE$1 + lookahead('\\\\s*:'),\n            relevance: 0,\n          },\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: '(\\\\([^(]*' +\n              '(\\\\([^(]*' +\n                '(\\\\([^(]*' +\n                '\\\\))?' +\n              '\\\\))?' +\n            '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/, relevance: 0,\n          },\n          {\n            className: '',\n            begin: /\\s/,\n            end: /\\s*/,\n            skip: true,\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { begin: XML_TAG.begin, end: XML_TAG.end }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin, end: XML_TAG.end, skip: true,\n                contains: ['self']\n              }\n            ]\n          },\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE$1}),\n          PARAMS\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      },\n      {\n        begin: '(get|set)\\\\s+(?=' + IDENT_RE$1 + '\\\\()',\n        end: /{/,\n        keywords: \"get set\",\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE$1}),\n          { begin: /\\(\\)/ }, // eat to avoid empty params\n          PARAMS\n        ]\n\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n}\n\nmodule.exports = javascript;\n","/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\n*/\n\nfunction xml(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var XML_ENTITIES = {\n    className: 'symbol',\n    begin: '&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;'\n  };\n  var XML_META_KEYWORDS = {\n\t  begin: '\\\\s',\n\t  contains:[\n\t    {\n\t      className: 'meta-keyword',\n\t      begin: '#?[a-z_][a-z1-9_-]+',\n\t      illegal: '\\\\n',\n      }\n\t  ]\n  };\n  var XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {begin: '\\\\(', end: '\\\\)'});\n  var APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {className: 'meta-string'});\n  var QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'});\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/, contains: [XML_ENTITIES]},\n              {begin: /'/, end: /'/, contains: [XML_ENTITIES]},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<![a-z]', end: '>',\n        relevance: 10,\n        contains: [\n\t\t\t\t  XML_META_KEYWORDS,\n\t\t\t\t  QUOTE_META_STRING_MODE,\n\t\t\t\t  APOS_META_STRING_MODE,\n\t\t\t\t\tXML_META_PAR_KEYWORDS,\n\t\t\t\t\t{\n\t\t\t\t\t  begin: '\\\\[', end: '\\\\]',\n\t\t\t\t\t  contains:[\n\t\t\t\t\t\t  {\n\t\t\t\t\t      className: 'meta',\n\t\t\t\t\t      begin: '<![a-z]', end: '>',\n\t\t\t\t\t      contains: [\n\t\t\t\t\t        XML_META_KEYWORDS,\n\t\t\t\t\t        XML_META_PAR_KEYWORDS,\n\t\t\t\t\t        QUOTE_META_STRING_MODE,\n\t\t\t\t\t        APOS_META_STRING_MODE\n\t\t\t\t\t\t    ]\n\t\t\t        }\n\t\t\t\t\t  ]\n\t\t\t\t  }\n\t\t\t\t]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n","/*\nLanguage: CSS\nCategory: common, css\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  var AT_MODIFIERS = \"and or not only\";\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/; // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = css;\n","\nimport styles from './appCode.styles'\nimport template from './appCode.template'\n\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport xml from 'highlight.js/lib/languages/xml';\nimport css from 'highlight.js/lib/languages/css';\n\n// import 'highlight.js/styles/github.css';\nimport '../../assets/editor.theme.css'\n\n\n\nconst appCode = () => {\n\n    const tagName = 'app-code'\n\n    const hooks = ({ methods }) => ({\n        afterOnInit () {\n            methods.initHighlight()\n        }\n    })\n\n    const methods = ({elm, props, state}) => ({\n\n        initHighlight () {\n            hljs.configure({ languages: ['xml','html', 'css', 'javascript'] })\n            hljs.registerLanguage('javascript', javascript);\n            hljs.registerLanguage('xml', xml);\n            hljs.registerLanguage('css', css);\n            elm.querySelectorAll('pre code').forEach((block) => {\n                hljs.highlightBlock(block);\n            });     \n        },\n\n        htmlScape(str) {\n            const specialChars = {\n                '\"': '&#34;',\n                '&': '&amp;',\n                '<': '&lt;',\n                '>': '&gt;',\n                '\"': '&#x34;',\n                \"'\": '&#x27;',\n                '/': '&#x2F;',\n            }\n\n            const regexScaper = /[&<>\"\\/]/g\n\n            return ` ${str}`.replace(regexScaper, (match) => {\n                return specialChars[match]\n            })\n            \n        }        \n\n    })\n\n    return { \n        tagName,\n        styles,\n        template,\n        hooks,\n        methods,\n    }\n}\n\nexport { appCode }","import template from './appView.template'\nimport styles from './appView.styles'\n\nimport { store } from '../../../store'\n\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appCode } from '../appCode/appCode.component'\n\nconst appView = () => {\n\n    const tagName = 'app-view'\n\n    const state = store.get()\n\n    const children = () => ({\n        appTitle,\n        appCode\n    })\n\n    const methods = () => ({\n\n        htmlEncode(str) {\n            const specialChars = {\n                '&':'&amp;',\n                '<':'&lt;',\n                '>':'&gt;',\n                '\"':'&#34;',\n                \"'\":'&#x27;',\n                '`':'&#x96',\n                '$':'&#x36',\n                '/':'&#x2F;',\n            }\n\n            const regexScaper = /[&<>\"'`$\\/]/g\n\n            const result = ` ${str}`.replace(regexScaper, (match) => specialChars[match])\n            console.log(result)\n            return result\n        }\n\n    })\n\n    return {\n        tagName,\n        state,\n        template,\n        styles,\n        children,\n        methods\n    }\n}\n\nexport { appView }","import template from './appHome.template'\nimport styles from './appHome.styles'\n\nimport { store } from '../../../store'\n\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appView } from '../appView/appView.component'\n\nconst appHome = () => {\n\n    const tagName = 'app-home'\n\n    const state = store.get().introduction\n\n    const children = () => ({\n        appTitle,\n        appView\n    })\n\n\n    return {\n        tagName,\n        state,\n        template,\n        styles,\n        children,\n    }\n}\n\nexport { appHome }","const appNotFound = () => {\n    \n    const state = {\n        title: 'Not Found!'\n    }\n\n    const template = ({props, state}) => /*html*/ `\n    <div class=\"wrapper\">\n        <h1 class=\"title\">${state.title}</h1>\n        <a href=\"#/\">voltar</a>\n    </div>\n    `\n\n    const styles = () => /*css*/ `\n        app-not-found .wrapper { text-align:center }\n        app-not-found .title { color: red }\n    `\n\n    return {\n        state,\n        template,\n        styles\n    }\n}\n\nexport { appNotFound }","export default ({props, state}) => { \n    \n    return /*html*/ `\n        <div class=\"store-wrapper\">\n            <div class=\"container\">\n                <app-view data-props=\"{'section':'store'}\"></app-view>\n            </div>\n        </div>\n    `\n\n}","export default () => {\n    return /*css*/ `\n        app-store .store-wrapper {\n            display:block;\n            float:left;\n            width:100%;\n        }\n\n        app-store .container {\n            display:block;\n            width:100%;\n            max-width:1180px;\n            padding:15px;\n            margin:0 auto;\n        }\n\n        app-store .container::after {\n            content:'';\n            display:block;\n            float:left;\n            width:100%;\n        }\n    `\n}","import template from './appStore.template'\nimport styles from './appStore.styles'\n\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appView } from '../appView/appView.component'\nimport { store } from '../../../store'\n\nconst appStore = () => {\n\n    const tagName = 'app-store'\n\n    const state = store.get()\n\n    const children = () => ({\n        appTitle,\n        appView\n    })\n\n    return {\n        tagName,\n        state,\n        template,\n        styles,\n        children\n    }\n}\n\nexport { appStore }","export default ({props, state}) => { \n    \n    return /*html*/ `\n        <div class=\"store-wrapper\">\n            <div class=\"container\">\n                <app-view data-props=\"{'section':'tutorial'}\"></app-view>\n            </div>\n        </div>\n    `\n\n}","export default () => {\n    return /*css*/ `\n        app-store .store-wrapper {\n            display:block;\n            float:left;\n            width:100%;\n        }\n\n        app-store .container {\n            display:block;\n            width:100%;\n            max-width:1180px;\n            padding:15px;\n            margin:0 auto;\n        }\n\n        app-store .container::after {\n            content:'';\n            display:block;\n            float:left;\n            width:100%;\n        }\n    `\n}","import template from './appTutorial.template'\nimport styles from './appTutorial.styles'\n\nimport { appTitle } from '../appTitle/appTitle.component'\nimport { appView } from '../appView/appView.component'\nimport { store } from '../../../store'\n\nconst appTutorial = () => {\n\n    const tagName = 'app-tutorial'\n\n    const state = store.get()\n\n    const children = () => ({\n        appTitle,\n        appView\n    })\n\n    return {\n        tagName,\n        state,\n        template,\n        styles,\n        children\n    }\n}\n\nexport { appTutorial }","import { r9x } from 'r9x_js'\n\nimport { appMain } from './src/components/appMain.component'\nimport {appHome} from './src/components/appHome/appHome.component'\nimport { appNotFound } from './src/components/appNotFound.component'\nimport { appStore } from './src/components/appStore/appStore.component'\nimport { appTutorial } from './src/components/appTutorial/appTutorial.component'\n\nconst routes = {\n    firstRoute: { hash: '#/', component: appHome },\n    defaultRoute: { hash: '#/404', component: appNotFound },\n    otherRoutes: [\n        { hashExp: /^\\#\\/$/, component: appHome },\n        { hashExp: /^\\#\\/store$/, component: appStore },\n        { hashExp: /^\\#\\/tutorial$/, component: appTutorial },\n    ]\n}\n\nconst app = r9x()\n\napp.use({\n    main: appMain,\n    routes,\n})\n\napp.init()"]}